
/*
   YARA Rule Set
   Author: resteex
   Identifier: Win32_BigBang 
   /
/* Rule Set ----------------------------------------------------------------- */

rule resteex_Win32_BigBang {
	meta: 
		 description= "Win32_BigBang Group" 
		 author = "Resteex Generator" 
		 date = "2022-01-10_19-31-49" 
		 license = "https://github.com/resteex0/yarex"
		 hash1= "18864d22331fc6503641f128226aaea8"
		 hash2= "87d7d314f86f61a9099a51c269b4ec78"
		 hash3= "a233d90b8e5c19c4b3373bb76eb11428"
		 hash4= "a3dc31c456508df7dfac8349eb0d2b65"

	strings:

	
 		 $s1= "!$).056;>ACENQV[_`eimuz" fullword wide
		 $s2= ")) + 0), expr, charactersInExpression + 1)" fullword wide
		 $s3= ")) + 0), localeNameOutput, wcslen(localeNameOutput) + 1)" fullword wide
		 $s4= ")) + 0), localeName, wcslen(localeName) + 1)" fullword wide
		 $s5= ")) + 0), lpLocaleString, wcslen(lpLocaleString) + 1)" fullword wide
		 $s6= "3/3- 82/3/2018." fullword wide
		 $s7= "abort() has been called" fullword wide
		 $s8= "(access_mode & (~6)) == 0" fullword wide
		 $s9= "__acrt_copy_locale_name" fullword wide
		 $s10= "__acrt_copy_path_to_wide_string" fullword wide
		 $s11= "__acrt_DownlevelLCIDToLocaleName" fullword wide
		 $s12= "__acrt_first_block == header" fullword wide
		 $s13= "__acrt_first_block == old_head" fullword wide
		 $s14= "__acrt_fp_format" fullword wide
		 $s15= "__acrt_fp_strflt_to_string" fullword wide
		 $s16= "__acrt_GetLocaleInfoA" fullword wide
		 $s17= "__acrt_get_qualified_locale" fullword wide
		 $s18= "__acrt_last_block == header" fullword wide
		 $s19= "__acrt_last_block == old_head" fullword wide
		 $s20= "__acrt_lowio_ensure_fh_exists" fullword wide
		 $s21= "__acrt_report_runtime_error" fullword wide
		 $s22= "__acrt_stdio_parse_mode" fullword wide
		 $s23= "aits::tcslen(assert_buffer), 10)" fullword wide
		 $s24= "american english" fullword wide
		 $s25= "american-english" fullword wide
		 $s26= "api-ms-win-core-datetime-l1-1-1" fullword wide
		 $s27= "api-ms-win-core-fibers-l1-1-1" fullword wide
		 $s28= "api-ms-win-core-file-l2-1-1" fullword wide
		 $s29= "api-ms-win-core-localization-l1-2-1" fullword wide
		 $s30= "api-ms-win-core-localization-obsolete-l1-2-0" fullword wide
		 $s31= "api-ms-win-core-processthreads-l1-1-2" fullword wide
		 $s32= "api-ms-win-core-registry-l1-1-0.dll" fullword wide
		 $s33= "api-ms-win-core-string-l1-1-0" fullword wide
		 $s34= "api-ms-win-core-synch-l1-2-0" fullword wide
		 $s35= "api-ms-win-core-sysinfo-l1-2-1" fullword wide
		 $s36= "api-ms-win-core-winrt-l1-1-0" fullword wide
		 $s37= "api-ms-win-core-xstate-l2-1-0" fullword wide
		 $s38= "api-ms-win-rtcore-ntuser-window-l1-1-0" fullword wide
		 $s39= "api-ms-win-security-systemfunctions-l1-1-0" fullword wide
		 $s40= "arguments[0][0] != '0'" fullword wide
		 $s41= "arguments[0] != nullptr" fullword wide
		 $s42= "arguments != nullptr" fullword wide
		 $s43= "ar> > >::process" fullword wide
		 $s44= "ar> > >::state_case_normal" fullword wide
		 $s45= "ar> > >::state_case_normal_tchar" fullword wide
		 $s46= "ar> > >::state_case_size" fullword wide
		 $s47= "ar> > >::type_case_integer" fullword wide
		 $s48= "ar> > >::type_case_n" fullword wide
		 $s49= "Assertion failed!" fullword wide
		 $s50= "Assertion failed: " fullword wide
		 $s51= "Assertion Failed" fullword wide
		 $s52= "Assertion failed: %Ts, file %Ts, line %d" fullword wide
		 $s53= "Balloon Text Char" fullword wide
		 $s54= "base != nullptr || num == 0" fullword wide
		 $s55= "binMSPDB140.DLL" fullword wide
		 $s56= "block != nullptr" fullword wide
		 $s57= "buffer_count > 0" fullword wide
		 $s58= "buffer_count == 0 || buffer != nullptr" fullword wide
		 $s59= "Buffer is too small" fullword wide
		 $s60= "buffer != nullptr" fullword wide
		 $s61= "buffer != nullptr && buffer_count > 0" fullword wide
		 $s62= "(buffer != nullptr && buffer_count > 0) || (buffer == nullptr && buffer_count == 0)" fullword wide
		 $s63= "buffer_pointer != nullptr" fullword wide
		 $s64= "buffer_size % 2 == 0" fullword wide
		 $s65= "c == '0' || *_p == c" fullword wide
		 $s66= "cached_fp == invalid_function_sentinel()" fullword wide
		 $s67= "cached_fp == new_fp" fullword wide
		 $s68= "cached_handle == INVALID_HANDLE_VALUE" fullword wide
		 $s69= "cached_handle == new_handle" fullword wide
		 $s70= "cached_state == not_packaged" fullword wide
		 $s71= "call_wsetlocale" fullword wide
		 $s72= "cchCount1==0 && cchCount2==1 || cchCount1==1 && cchCount2==0" fullword wide
		 $s73= "char> > >::_Compat" fullword wide
		 $s74= "char> > > > >::layer> > >::operator *" fullword wide
		 $s75= "char> > > > >::layer> > >::operator +=" fullword wide
		 $s76= "char> > >::operator *" fullword wide
		 $s77= "char> > >::operator ++" fullword wide
		 $s78= "char> > >::operator +=" fullword wide
		 $s79= "char_t> >::validate_and_update_state_at_end_of_format_string" fullword wide
		 $s80= "char>::validate" fullword wide
		 $s81= "char>::validate_stream_is_ansi_if_required" fullword wide
		 $s82= "chinese-hongkong" fullword wide
		 $s83= "chinese-simplified" fullword wide
		 $s84= "chinese-singapore" fullword wide
		 $s85= "chinese-traditional" fullword wide
		 $s86= "class std::basic_stri" fullword wide
		 $s87= "command[0] != '0'" fullword wide
		 $s88= "common_assert_to_message_box_build_string" fullword wide
		 $s89= "common_configure_argv" fullword wide
		 $s90= "common_dupenv_s_nolock" fullword wide
		 $s91= "common_expand_argv_wildcards" fullword wide
		 $s92= "common_ftell_nolock" fullword wide
		 $s93= "common_getenv_s_nolock" fullword wide
		 $s94= "common_gmtime_s" fullword wide
		 $s95= "common_localtime_s" fullword wide
		 $s96= "common_message_window" fullword wide
		 $s97= "common_refill_and_read_nolock" fullword wide
		 $s98= "common_set_variable_in_environment_nolock" fullword wide
		 $s99= "common_sopen_dispatch" fullword wide
		 $s100= "common_tcscat_s" fullword wide
		 $s101= "common_tcscpy_s" fullword wide
		 $s102= "common_tcsncat_s" fullword wide
		 $s103= "common_tcsncpy_s" fullword wide
		 $s104= "common_timespec_get" fullword wide
		 $s105= "common_vfprintf" fullword wide
		 $s106= "common_vsnprintf_s" fullword wide
		 $s107= "common_vsprintf" fullword wide
		 $s108= "common_vsprintf_s" fullword wide
		 $s109= "comp != nullptr" fullword wide
		 $s110= "_configthreadlocale" fullword wide
		 $s111= "configure_text_mode" fullword wide
		 $s112= "construct_command_line" fullword wide
		 $s113= "construct_environment_block" fullword wide
		 $s114= "_context != nullptr" fullword wide
		 $s115= "copy_and_add_argument_to_buffer" fullword wide
		 $s116= "copy_environment" fullword wide
		 $s117= "Copyright (C) 201025" fullword wide
		 $s118= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludeatlalloc.h" fullword wide
		 $s119= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludeatlbase.h" fullword wide
		 $s120= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludeatlcomcli.h" fullword wide
		 $s121= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludeatlconv.h" fullword wide
		 $s122= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludeatlimage.h" fullword wide
		 $s123= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludeatlmem.h" fullword wide
		 $s124= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludeatlsimpstr.h" fullword wide
		 $s125= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludeatlstr.h" fullword wide
		 $s126= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludeatltransactionmanager.h" fullword wide
		 $s127= "C:Program Files (x86)Microsoft Visual Studio 14.0VCatlmfcincludecstringt.h" fullword wide
		 $s128= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludealgorithm" fullword wide
		 $s129= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludeboost/archive/iterators/base64_from_b" fullword wide
		 $s130= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludeboost/optional/optional.hpp" fullword wide
		 $s131= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludeboost/property_tree/json_parser/detai" fullword wide
		 $s132= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludeboost/property_tree/string_path.hpp" fullword wide
		 $s133= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludeistream" fullword wide
		 $s134= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludeostream" fullword wide
		 $s135= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludestreambuf" fullword wide
		 $s136= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludevector" fullword wide
		 $s137= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludexlocale" fullword wide
		 $s138= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludexmemory" fullword wide
		 $s139= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludexmemory0" fullword wide
		 $s140= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludexstring" fullword wide
		 $s141= "C:Program Files (x86)Microsoft Visual Studio 14.0VCincludexutility" fullword wide
		 $s142= "'C:Program Files (x86)Microsoft Visual Studio2017EnterpriseVCToolsMSVC14.12.25827includebo" fullword wide
		 $s143= "C:Program Files (x86)Microsoft Visual Studio2017EnterpriseVCToolsMSVC14.12.25827includeboo" fullword wide
		 $s144= "create_environment" fullword wide
		 $s145= "_CrtCheckMemory()" fullword wide
		 $s146= "_CrtDbgReport: String too long or Invalid characters in String" fullword wide
		 $s147= "_CrtDbgReport: String too long or IO Error" fullword wide
		 $s148= ")_CrtIsValidHeapPointer(block)" fullword wide
		 $s149= "crt_lowio_text_mode::ansi) && !_tm_unicode_safe(fn))))" fullword wide
		 $s150= "_CrtMemCheckpoint" fullword wide
		 $s151= "__crt_strtox::floating_point_value::as_double" fullword wide
		 $s152= "__crt_strtox::floating_point_value::as_float" fullword wide
		 $s153= "__crt_strtox::parse_integer" fullword wide
		 $s154= "current != nullptr" fullword wide
		 $s155= "data->_cacheLocaleName, wcslen(_psetloc_data->_cacheLocaleName) + 1)" fullword wide
		 $s156= "DC:Program Files (x86)Microsoft Visual Studio2017EnterpriseVCToolsMSVC14.12.25827includebo" fullword wide
		 $s157= "dddd, MMMM dd, yyyy" fullword wide
		 $s158= "decode_access_flags" fullword wide
		 $s159= "decode_open_create_flags" fullword wide
		 $s160= "decode_sharing_flags" fullword wide
		 $s161= "Default Paragraph Font" fullword wide
		 $s162= "destination_count > 0" fullword wide
		 $s163= "destination != nullptr" fullword wide
		 $s164= "((destination)) != NULL && ((size_in_elements)) > 0" fullword wide
		 $s165= "digits_per_iteration_multiplier" fullword wide
		 $s166= "DocumentSummaryInformation" fullword wide
		 $s167= "(dst != nullptr && sizeInBytes > 0) || (dst == nullptr && sizeInBytes == 0)" fullword wide
		 $s168= "ecached_state == packaged" fullword wide
		 $s169= "eC:Program Files (x86)Microsoft Visual Studio2017EnterpriseVCToolsMSVC14.12.25827includebo" fullword wide
		 $s170= "e = mbstowcs_s(&ret, szOutMessage2, 4096, szOutMessage, ((size_t)-1))" fullword wide
		 $s171= "english-american" fullword wide
		 $s172= "english-caribbean" fullword wide
		 $s173= "english-jamaica" fullword wide
		 $s174= "english-south africa" fullword wide
		 $s175= "english-trinidad y tobago" fullword wide
		 $s176= "er_for_ignore_blocks" fullword wide
		 $s177= "ERROR : Unable to initialize critical section in CAtlBaseModule" fullword wide
		 $s178= "execute_command" fullword wide
		 $s179= "ext-ms-win-kernel32-package-current-l1-1-0" fullword wide
		 $s180= "ext-ms-win-ntuser-dialogbox-l1-1-0" fullword wide
		 $s181= "ext-ms-win-ntuser-windowstation-l1-1-0" fullword wide
		 $s182= "failure, see the Visual C++ documentation on asserts" fullword wide
		 $s183= "failure, see the Visual C++ documentation on asserts." fullword wide
		 $s184= "f:ddvctoolscrtvcruntimeincinternal_shared.h" fullword wide
		 $s185= "f:ddvctoolscrtvcruntimesrcehstd_exception.cpp" fullword wide
		 $s186= "f:ddvctoolscrtvcruntimesrcinternalwinapi_downlevel.cpp" fullword wide
		 $s187= "f:ddvctoolscrtvcstartupsrcmiscthread_safe_statics.cpp" fullword wide
		 $s188= "FileDescription" fullword wide
		 $s189= "file_name[0] != '0'" fullword wide
		 $s190= "file_name != nullptr" fullword wide
		 $s191= "first != nullptr" fullword wide
		 $s192= "For information on how your program can cause an assertion" fullword wide
		 $s193= "_format_char != '0'" fullword wide
		 $s194= "_format_it != nullptr" fullword wide
		 $s195= "format != nullptr" fullword wide
		 $s196= "fp_format_e_internal" fullword wide
		 $s197= "fp_format_nan_or_infinity" fullword wide
		 $s198= "_fread_nolock_s" fullword wide
		 $s199= "french-canadian" fullword wide
		 $s200= "french-luxembourg" fullword wide
		 $s201= "german-austrian" fullword wide
		 $s202= "german-lichtenstein" fullword wide
		 $s203= "german-luxembourg" fullword wide
		 $s204= "= GetData()->nAllocLength" fullword wide
		 $s205= "_get_daylight(&daylight)" fullword wide
		 $s206= "_get_dstbias (&dstbias )" fullword wide
		 $s207= "_get_dstbias(&dstbias)" fullword wide
		 $s208= "_get_dstbias(&dst_bias) == 0" fullword wide
		 $s209= "_get_fmode(&fmode)" fullword wide
		 $s210= "GetLocaleNameFromDefault" fullword wide
		 $s211= "_get_stream_buffer_pointers" fullword wide
		 $s212= "_get_timezone(&offset) == 0" fullword wide
		 $s213= "_get_timezone(&timezone)" fullword wide
		 $s214= "har_t> > >::process" fullword wide
		 $s215= "har_t> > >::state_case_normal" fullword wide
		 $s216= "har_t> > >::state_case_size" fullword wide
		 $s217= "har_t> > >::type_case_integer" fullword wide
		 $s218= "har_t> > >::type_case_n" fullword wide
		 $s219= "header->_block_use == block_use || header->_block_use == _CRT_BLOCK && block_use == _NORMAL_BLOCK" fullword wide
		 $s220= "header->_line_number == line_number_for_ignore_blocks && header->_request_number == request_number_f" fullword wide
		 $s221= "(((HRESULT)(hr)) >= 0)" fullword wide
		 $s222= "Iapi-ms-win-appmodel-runtime-l1-1-1" fullword wide
		 $s223= "Iapi-ms-win-core-fibers-l1-1-1" fullword wide
		 $s224= "Interenet Assistant" fullword wide
		 $s225= "InterenetAssistant" fullword wide
		 $s226= "Interenet Assistant.exe" fullword wide
		 $s227= "InterenetAssistant Updater" fullword wide
		 $s228= "invalid comparator" fullword wide
		 $s229= "invalid iterator range" fullword wide
		 $s230= "invalid null pointer" fullword wide
		 $s231= "is_block_type_valid(header->_block_use)" fullword wide
		 $s232= "_isindst_nolock" fullword wide
		 $s233= "isleadbyte(_dbcsBuffer(fh))" fullword wide
		 $s234= "istreambuf_iterator is not dereferencable" fullword wide
		 $s235= "istreambuf_iterator is not incrementable" fullword wide
		 $s236= "ITERATOR LIST CORRUPTED!" fullword wide
		 $s237= "_itoa_s(nLine, szLineMessage, 4096, 10)" fullword wide
		 $s238= "_itow_s(nLine, szLineMessage, 4096, 10)" fullword wide
		 $s239= ":Jan:January:Feb:February:Mar:March:Apr:April:May:May:Jun:June:Jul:July:Aug:August:Sep:September:Oct" fullword wide
		 $s240= "Japi-ms-win-core-fibers-l1-1-1" fullword wide
		 $s241= "Japi-ms-win-core-synch-l1-2-0.dll" fullword wide
		 $s242= "Jminkernelcrtsucrtsrcappcrtinternalreport_runtime_error.cpp" fullword wide
		 $s243= "Kapi-ms-win-appmodel-runtime-l1-1-1" fullword wide
		 $s244= "LangCountryEnumProcEx" fullword wide
		 $s245= "LanguageEnumProcEx" fullword wide
		 $s246= "Lapi-ms-win-core-synch-l1-2-0.dll" fullword wide
		 $s247= "last != nullptr" fullword wide
		 $s248= "_length == length_modifier::none" fullword wide
		 $s249= "library routine called out of sequence" fullword wide
		 $s250= "l/narrow_encoding.hpp" fullword wide
		 $s251= "local_action != nullptr" fullword wide
		 $s252= "_loc_update.GetLocaleT()->locinfo->_public._locale_mb_cur_max == 1 || _loc_update.GetLocaleT()->loci" fullword wide
		 $s253= "l/standard_callbacks.hpp" fullword wide
		 $s254= "mantissa_buffer_count > 0" fullword wide
		 $s255= "_mbstowcs_l_helper" fullword wide
		 $s256= "_mbstowcs_s_l(&wnum, *string, *left, tz_name, ((size_t)-1), locale)" fullword wide
		 $s257= "mbstowcs_s(&size, nullptr, 0, narrow_locale, 2147483647)" fullword wide
		 $s258= "memcpy_s( pch, sizeof(Character) * ((260 + 1) - (pch - program_name)), get_dot_dot_dot(Character())," fullword wide
		 $s259= "Microsoft Visual C++ Runtime Library" fullword wide
		 $s260= "minkernelcrtsucrtinccorecrt_internal_big_integer.h" fullword wide
		 $s261= "minkernelcrtsucrtinccorecrt_internal_stdio.h" fullword wide
		 $s262= "minkernelcrtsucrtinccorecrt_internal_stdio_output.h" fullword wide
		 $s263= "minkernelcrtsucrtinccorecrt_internal_string_templates.h" fullword wide
		 $s264= "minkernelcrtsucrtinccorecrt_internal_strtox.h" fullword wide
		 $s265= "minkernelcrtsucrtsrcappcrtconvertcfout.cpp" fullword wide
		 $s266= "minkernelcrtsucrtsrcappcrtconvertcvt.cpp" fullword wide
		 $s267= "minkernelcrtsucrtsrcappcrtconvert_fptostr.cpp" fullword wide
		 $s268= "minkernelcrtsucrtsrcappcrtconvertisctype.cpp" fullword wide
		 $s269= "minkernelcrtsucrtsrcappcrtconvertmbstowcs.cpp" fullword wide
		 $s270= "minkernelcrtsucrtsrcappcrtconvertmbtowc.cpp" fullword wide
		 $s271= "minkernelcrtsucrtsrcappcrtconvertwcstombs.cpp" fullword wide
		 $s272= "minkernelcrtsucrtsrcappcrtconvertwctomb.cpp" fullword wide
		 $s273= "minkernelcrtsucrtsrcappcrtconvertxtoa.cpp" fullword wide
		 $s274= "minkernelcrtsucrtsrcappcrtfilesystemwaccess.cpp" fullword wide
		 $s275= "minkernelcrtsucrtsrcappcrtheapdebug_heap.cpp" fullword wide
		 $s276= "minkernelcrtsucrtsrcappcrtheapexpand.cpp" fullword wide
		 $s277= "minkernelcrtsucrtsrcappcrtheapnew_mode.cpp" fullword wide
		 $s278= "minkernelcrtsucrtsrcappcrtinternalstring_utilities.cpp" fullword wide
		 $s279= "minkernelcrtsucrtsrcappcrtinternalwinapi_thunks.cpp" fullword wide
		 $s280= "minkernelcrtsucrtsrcappcrtlocalecomparestringa.cpp" fullword wide
		 $s281= "minkernelcrtsucrtsrcappcrtlocalegetlocaleinfoa.cpp" fullword wide
		 $s282= "minkernelcrtsucrtsrcappcrtlocaleget_qualified_locale.cpp" fullword wide
		 $s283= "minkernelcrtsucrtsrcappcrtlocaleinitctype.cpp" fullword wide
		 $s284= "minkernelcrtsucrtsrcappcrtlocaleinitmon.cpp" fullword wide
		 $s285= "minkernelcrtsucrtsrcappcrtlocaleinitnum.cpp" fullword wide
		 $s286= "minkernelcrtsucrtsrcappcrtlocaleinittime.cpp" fullword wide
		 $s287= "minkernelcrtsucrtsrcappcrtlocalelcidtoname_downlevel.cpp" fullword wide
		 $s288= "minkernelcrtsucrtsrcappcrtlocalelocale_refcounting.cpp" fullword wide
		 $s289= "minkernelcrtsucrtsrcappcrtlocalesetlocale.cpp" fullword wide
		 $s290= "minkernelcrtsucrtsrcappcrtlocalewsetlocale.cpp" fullword wide
		 $s291= "minkernelcrtsucrtsrcappcrtlowioclose.cpp" fullword wide
		 $s292= "minkernelcrtsucrtsrcappcrtlowiocommit.cpp" fullword wide
		 $s293= "minkernelcrtsucrtsrcappcrtlowioisatty.cpp" fullword wide
		 $s294= "minkernelcrtsucrtsrcappcrtlowiolseek.cpp" fullword wide
		 $s295= "minkernelcrtsucrtsrcappcrtlowioopen.cpp" fullword wide
		 $s296= "minkernelcrtsucrtsrcappcrtlowioosfinfo.cpp" fullword wide
		 $s297= "minkernelcrtsucrtsrcappcrtlowioread.cpp" fullword wide
		 $s298= "minkernelcrtsucrtsrcappcrtlowiosetmode.cpp" fullword wide
		 $s299= "minkernelcrtsucrtsrcappcrtlowiowrite.cpp" fullword wide
		 $s300= "minkernelcrtsucrtsrcappcrtmiscdbgrpt.cpp" fullword wide
		 $s301= "minkernelcrtsucrtsrcappcrtmiscdbgrptt.cpp" fullword wide
		 $s302= "minkernelcrtsucrtsrcappcrtmiscset_error_mode.cpp" fullword wide
		 $s303= "minkernelcrtsucrtsrcappcrtmiscsignal.cpp" fullword wide
		 $s304= "minkernelcrtsucrtsrcappcrtstartupargv_parsing.cpp" fullword wide
		 $s305= "minkernelcrtsucrtsrcappcrtstartupargv_wildcards.cpp" fullword wide
		 $s306= "minkernelcrtsucrtsrcappcrtstartupassert.cpp" fullword wide
		 $s307= "minkernelcrtsucrtsrcappcrtstdiofclose.cpp" fullword wide
		 $s308= "minkernelcrtsucrtsrcappcrtstdiofgetc.cpp" fullword wide
		 $s309= "minkernelcrtsucrtsrcappcrtstdiofgetpos.cpp" fullword wide
		 $s310= "minkernelcrtsucrtsrcappcrtstdiofgets.cpp" fullword wide
		 $s311= "minkernelcrtsucrtsrcappcrtstdio_filbuf.cpp" fullword wide
		 $s312= "minkernelcrtsucrtsrcappcrtstdio_file.cpp" fullword wide
		 $s313= "minkernelcrtsucrtsrcappcrtstdiofileno.cpp" fullword wide
		 $s314= "minkernelcrtsucrtsrcappcrtstdio_flsbuf.cpp" fullword wide
		 $s315= "minkernelcrtsucrtsrcappcrtstdiofopen.cpp" fullword wide
		 $s316= "minkernelcrtsucrtsrcappcrtstdiofputc.cpp" fullword wide
		 $s317= "minkernelcrtsucrtsrcappcrtstdiofputs.cpp" fullword wide
		 $s318= "minkernelcrtsucrtsrcappcrtstdiofread.cpp" fullword wide
		 $s319= "minkernelcrtsucrtsrcappcrtstdio_freebuf.cpp" fullword wide
		 $s320= "minkernelcrtsucrtsrcappcrtstdiofseek.cpp" fullword wide
		 $s321= "minkernelcrtsucrtsrcappcrtstdiofsetpos.cpp" fullword wide
		 $s322= "minkernelcrtsucrtsrcappcrtstdioftell.cpp" fullword wide
		 $s323= "minkernelcrtsucrtsrcappcrtstdiofwrite.cpp" fullword wide
		 $s324= "minkernelcrtsucrtsrcappcrtstdio_getbuf.cpp" fullword wide
		 $s325= "minkernelcrtsucrtsrcappcrtstdioopenfile.cpp" fullword wide
		 $s326= "minkernelcrtsucrtsrcappcrtstdiooutput.cpp" fullword wide
		 $s327= "minkernelcrtsucrtsrcappcrtstdiorewind.cpp" fullword wide
		 $s328= "minkernelcrtsucrtsrcappcrtstdiosetvbuf.cpp" fullword wide
		 $s329= "minkernelcrtsucrtsrcappcrtstdio_sftbuf.cpp" fullword wide
		 $s330= "minkernelcrtsucrtsrcappcrtstdioungetc.cpp" fullword wide
		 $s331= "minkernelcrtsucrtsrcappcrtstdlibqsort.cpp" fullword wide
		 $s332= "minkernelcrtsucrtsrcappcrtstringstrnicmp.cpp" fullword wide
		 $s333= "minkernelcrtsucrtsrcappcrtstringstrnicol.cpp" fullword wide
		 $s334= "minkernelcrtsucrtsrcappcrtstringwcsdup.cpp" fullword wide
		 $s335= "minkernelcrtsucrtsrcappcrtstringwcsicmp.cpp" fullword wide
		 $s336= "minkernelcrtsucrtsrcappcrtstringwcsnicmp.cpp" fullword wide
		 $s337= "minkernelcrtsucrtsrcappcrtstringwmemcpy_s.cpp" fullword wide
		 $s338= "minkernelcrtsucrtsrcappcrttimegmtime.cpp" fullword wide
		 $s339= "minkernelcrtsucrtsrcappcrttimelocaltime.cpp" fullword wide
		 $s340= "minkernelcrtsucrtsrcappcrttimestrftime.cpp" fullword wide
		 $s341= "minkernelcrtsucrtsrcappcrttimetime.cpp" fullword wide
		 $s342= "minkernelcrtsucrtsrcappcrttimetimeset.cpp" fullword wide
		 $s343= "minkernelcrtsucrtsrcappcrttimetzset.cpp" fullword wide
		 $s344= "minkernelcrtsucrtsrcappcrttimewcsftime.cpp" fullword wide
		 $s345= "minkernelcrtsucrtsrcappcrttrancontrlfp.c" fullword wide
		 $s346= "minkernelcrtsucrtsrcappcrttranfrexp.c" fullword wide
		 $s347= "minkernelcrtsucrtsrcdesktopcrtenvenvironment_initialization.cpp" fullword wide
		 $s348= "minkernelcrtsucrtsrcdesktopcrtenvgetenv.cpp" fullword wide
		 $s349= "minkernelcrtsucrtsrcdesktopcrtenvsetenv.cpp" fullword wide
		 $s350= "minkernelcrtsucrtsrcdesktopcrtexecspawnv.cpp" fullword wide
		 $s351= "minkernelcrtsucrtsrcdesktopcrtexecspawnvp.cpp" fullword wide
		 $s352= "minkernelcrtsucrtsrcdesktopcrtexecsystem.cpp" fullword wide
		 $s353= "minkernelcrtsucrtsrcdesktopcrtmbstringmbsdec.cpp" fullword wide
		 $s354= "mode == 0 || mode == 1" fullword wide
		 $s355= "mode != nullptr" fullword wide
		 $s356= "mode == _O_TEXT || mode == _O_BINARY || mode == _O_WTEXT" fullword wide
		 $s357= "_name, file_name_count)" fullword wide
		 $s358= "name != nullptr" fullword wide
		 $s359= "nBytes == sizeof( BITMAP )" fullword wide
		 $s360= "new_bits == _CRTDBG_REPORT_FLAG || new_bits_have_only_valid_flags" fullword wide
		 $s361= "nfo->_public._locale_mb_cur_max == 2" fullword wide
		 $s362= "norwegian-bokmal" fullword wide
		 $s363= "norwegian-nynorsk" fullword wide
		 $s364= "Oapi-ms-win-appmodel-runtime-l1-1-1" fullword wide
		 $s365= ":October:Nov:November:Dec:December" fullword wide
		 $s366= "of_helper(_psetloc_data->_cacheLocaleName)) + 0))" fullword wide
		 $s367= "(oflag & text_mode_mask) != 0" fullword wide
		 $s368= "old_head->_line_number == line_number_for_ignore_blocks && old_head->_request_number == request_numb" fullword wide
		 $s369= "OriginalFilename" fullword wide
		 $s370= "or_ignore_blocks" fullword wide
		 $s371= "(_osfile(fh) & FOPEN)" fullword wide
		 $s372= "_osfile(fh) & FOPEN" fullword wide
		 $s373= "ost/optional/optional.hpp" fullword wide
		 $s374= "ost/property_tree/json_parser/detail/narrow_encoding.hpp" fullword wide
		 $s375= "ost/property_tree/json_parser/detail/standard_callbacks.hpp" fullword wide
		 $s376= "path != nullptr" fullword wide
		 $s377= "pData->pStringMgr == this" fullword wide
		 $s378= "pflt != nullptr" fullword wide
		 $s379= "Plain Text Char" fullword wide
		 $s380= "ploci->ctype1_refcount > 0" fullword wide
		 $s381= "ploci->lconv_mon_refcount > 0" fullword wide
		 $s382= "ploci->lconv_num_refcount > 0" fullword wide
		 $s383= "pmbstowcs_s(nullptr, wide_locale.get(), size, narrow_locale, ((size_t)-1))" fullword wide
		 $s384= "pminkernelcrtsucrtsrcdesktopcrtexeccenvarg.cpp" fullword wide
		 $s385= "pmode == _crt_argv_expanded_arguments || mode == _crt_argv_unexpanded_arguments" fullword wide
		 $s386= "pMode != nullptr" fullword wide
		 $s387= "(pmode & (~(_S_IREAD | _S_IWRITE))) == 0" fullword wide
		 $s388= "portuguese-brazilian" fullword wide
		 $s389= "position != nullptr" fullword wide
		 $s390= "(Press Retry to debug the application)" fullword wide
		 $s391= "(Press Retry to debug the application - JIT must be enabled)" fullword wide
		 $s392= "print_block_data" fullword wide
		 $s393= "Program: %hs%ls%ls%hs%ls%hs%ls%hs%ls%ls%hs%ls" fullword wide
		 $s394= "Program: %ls%ls%ls%ls%ls%ls%ls%ls%ls%ls%ls%ls" fullword wide
		 $s395= "program name unknown>" fullword wide
		 $s396= "ptime != nullptr" fullword wide
		 $s397= "(ptloci->lc_category[_category].locale != nullptr && ptloci->lc_category[_category].refcount != null" fullword wide
		 $s398= "(ptloci->lc_category[category].locale != nullptr && ptloci->lc_category[category].refcount != nullpt" fullword wide
		 $s399= "ptr) || (ptloci->lc_category[_category].locale == nullptr && ptloci->lc_category[_category].refcount" fullword wide
		 $s400= "public_stream != nullptr" fullword wide
		 $s401= "pwcs != nullptr" fullword wide
		 $s402= "(pwcs == nullptr && sizeInWords == 0) || (pwcs != nullptr && sizeInWords > 0)" fullword wide
		 $s403= "reallocation_is_allowed || (!reallocation_is_allowed && new_head == old_head)" fullword wide
		 $s404= "required_count != nullptr" fullword wide
		 $s405= "result_buffer_count > 0" fullword wide
		 $s406= "result_buffer != nullptr" fullword wide
		 $s407= "(result_buffer_size % 2) == 0" fullword wide
		 $s408= "result_buffer_size % 2 == 0" fullword wide
		 $s409= "result != nullptr" fullword wide
		 $s410= "r) || (ptloci->lc_category[category].locale == nullptr && ptloci->lc_category[category].refcount == " fullword wide
		 $s411= "Runtime Check Error." fullword wide
		 $s412= "Run-Time Check Failure #%d - %s" fullword wide
		 $s413= "scratch_buffer_count > 0" fullword wide
		 $s414= "scratch_buffer != nullptr" fullword wide
		 $s415= "Second Chance Assertion Failed: File " fullword wide
		 $s416= "Select * From AntiVirusProduct" fullword wide
		 $s417= "_set_error_mode" fullword wide
		 $s418= "sizeInBytes > retsize" fullword wide
		 $s419= "size_in_elements >= count" fullword wide
		 $s420= "= (SIZE_MAX / element_size)" fullword wide
		 $s421= "sizeof(Character) * dot_dot_dot_length )" fullword wide
		 $s422= "& ~(sizeof(int) - 1))) - ((sizeof(wchar_t *) + sizeof(int) - 1) & ~(sizeof(int) - 1)))))" fullword wide
		 $s423= "size_t>(1 + 4 + precision + 6)" fullword wide
		 $s424= "size_t>(3 + (precision > 0 ? precision : 0) + 5 + 1)" fullword wide
		 $s425= "size_t>((digits > 0 ? digits : 0) + 1)" fullword wide
		 $s426= "size_t>(is_negative ? 2 : 1)" fullword wide
		 $s427= "SOFTWAREMicrosoftWindows NTCurrentVersion" fullword wide
		 $s428= "SOFTWAREWow6432NodeMicrosoftVisualStudio14.0SetupVC" fullword wide
		 $s429= "(((source))) != NULL" fullword wide
		 $s430= "source != nullptr" fullword wide
		 $s431= "spanish-argentina" fullword wide
		 $s432= "spanish-bolivia" fullword wide
		 $s433= "spanish-colombia" fullword wide
		 $s434= "spanish-costa rica" fullword wide
		 $s435= "spanish-dominican republic" fullword wide
		 $s436= "spanish-ecuador" fullword wide
		 $s437= "spanish-el salvador" fullword wide
		 $s438= "spanish-guatemala" fullword wide
		 $s439= "spanish-honduras" fullword wide
		 $s440= "spanish-mexican" fullword wide
		 $s441= "spanish-nicaragua" fullword wide
		 $s442= "spanish-paraguay" fullword wide
		 $s443= "spanish-puerto rico" fullword wide
		 $s444= "spanish-uruguay" fullword wide
		 $s445= "spanish-venezuela" fullword wide
		 $s446= "st/archive/iterators/base64_from_binary.hpp" fullword wide
		 $s447= "state_case_normal" fullword wide
		 $s448= "state_case_normal_common()" fullword wide
		 $s449= "state_case_normal_tchar" fullword wide
		 $s450= "state_case_size" fullword wide
		 $s451= "state != nullptr" fullword wide
		 $s452= "State of Palestine" fullword wide
		 $s453= "_state == state::normal || _state == state::type" fullword wide
		 $s454= "std::_Deallocate" fullword wide
		 $s455= "st/optional/optional.hpp" fullword wide
		 $s456= "st/property_tree/json_parser/detail/narrow_encoding.hpp" fullword wide
		 $s457= "st/property_tree/string_path.hpp" fullword wide
		 $s458= "strcat_s(szLineMessage, 4096, szUserMessage)" fullword wide
		 $s459= "strcpy_s(last_tz, strlen(tz_env) + 1, tz_env)" fullword wide
		 $s460= "strcpy_s( result_buffer, result_buffer_count, strings[row][column + !long_string_will_fit])" fullword wide
		 $s461= "strcpy_s(szOutMessage, 4096, szLineMessage)" fullword wide
		 $s462= "( (_Stream.is_string_backed()) || (fn = _fileno(_Stream.public_stream()), ((_textmode_safe(fn) == __" fullword wide
		 $s463= "stream != nullptr" fullword wide
		 $s464= "stream.public_stream()" fullword wide
		 $s465= "_stream.valid()" fullword wide
		 $s466= "_string1 != nullptr" fullword wide
		 $s467= "_string2 != nullptr" fullword wide
		 $s468= "String is not null terminated" fullword wide
		 $s469= "string iterator not dereferencable" fullword wide
		 $s470= "string iterator not incrementable" fullword wide
		 $s471= "string iterator + offset out of range" fullword wide
		 $s472= "string iterators incompatible" fullword wide
		 $s473= "string != nullptr" fullword wide
		 $s474= "string != nullptr || count == 0" fullword wide
		 $s475= "string subscript out of range" fullword wide
		 $s476= "strncpy_s(*char_result, local_length, local_buffer, local_length - 1)" fullword wide
		 $s477= "strncpy_s(tzname[0], 64, tz_env, tz_name_length)" fullword wide
		 $s478= "strncpy_s(tzname[1], 64, tz_env, 3)" fullword wide
		 $s479= "struct boost::property_" fullword wide
		 $s480= "SummaryInformation" fullword wide
		 $s481= ":Sun:Sunday:Mon:Monday:Tue:Tuesday:Wed:Wednesday:Thu:Thursday:Fri:Friday:Sat:Saturday" fullword wide
		 $s482= "swedish-finland" fullword wide
		 $s483= "this->is_initialized()" fullword wide
		 $s484= "timeptr != nullptr" fullword wide
		 $s485= "Times New Roman" fullword wide
		 $s486= "timp != nullptr" fullword wide
		 $s487= "to->_What == nullptr && to->_DoFree == false" fullword wide
		 $s488= "traits::itot_s( line_number, assert_buffer + traits::tcslen(assert_buffer), assert_buffer_count - tr" fullword wide
		 $s489= "traits::tcscat_s(assert_buffer, assert_buffer_count, expression)" fullword wide
		 $s490= "traits::tcscat_s(assert_buffer, assert_buffer_count, file_name)" fullword wide
		 $s491= "traits::tcscat_s (assert_buffer, assert_buffer_count, get_dot_dot_dot(Character()))" fullword wide
		 $s492= "traits::tcscat_s(assert_buffer, assert_buffer_count, get_dot_dot_dot(Character()))" fullword wide
		 $s493= "traits::tcscat_s(assert_buffer, assert_buffer_count, get_double_newline(Character()))" fullword wide
		 $s494= "traits::tcscat_s(assert_buffer, assert_buffer_count, get_expression_intro(Character()))" fullword wide
		 $s495= "traits::tcscat_s(assert_buffer, assert_buffer_count, get_file_intro(Character()))" fullword wide
		 $s496= "traits::tcscat_s(assert_buffer, assert_buffer_count, get_help_intro(Character()))" fullword wide
		 $s497= "traits::tcscat_s(assert_buffer, assert_buffer_count, get_info_intro(Character()))" fullword wide
		 $s498= "traits::tcscat_s(assert_buffer, assert_buffer_count, get_line_intro(Character()))" fullword wide
		 $s499= "traits::tcscat_s(assert_buffer, assert_buffer_count, get_newline(Character()))" fullword wide
		 $s500= "traits::tcscat_s(assert_buffer, assert_buffer_count, get_program_intro(Character()))" fullword wide
		 $s501= "traits::tcscat_s(assert_buffer, assert_buffer_count, pch)" fullword wide
		 $s502= "traits::tcscat_s (assert_buffer, assert_buffer_count, pch + len - (ffn / 3 - ffn / 6 - 2))" fullword wide
		 $s503= "traits::tcscat_s (assert_buffer, assert_buffer_count, pch + len - p)" fullword wide
		 $s504= "traits::tcscat_s(buffer.get(), file_name_size, file_name)" fullword wide
		 $s505= "traits::tcscat_s(file_buffer, 260, backslash_string)" fullword wide
		 $s506= "traits::tcscat_s(file_buffer, 260, file_name)" fullword wide
		 $s507= "traits::tcscpy_s(assert_buffer, assert_buffer_count, get_box_intro(Character()))" fullword wide
		 $s508= "traits::tcscpy_s(buffer, buffer_count, value)" fullword wide
		 $s509= "traits::tcscpy_s(buffer.get(), buffer_size, mutated_file_name)" fullword wide
		 $s510= "traits::tcscpy_s(buffer.get(), file_name_size, dot_slash)" fullword wide
		 $s511= "traits::tcscpy_s(*buffer_pointer, value_count, value)" fullword wide
		 $s512= "traits::tcscpy_s(extension_buffer, 5, *it)" fullword wide
		 $s513= "traits::tcscpy_s(name, count, option)" fullword wide
		 $s514= "traits::tcscpy_s(*new_it, required_count, *old_it)" fullword wide
		 $s515= "traits::tcscpy_s(program_name, (sizeof(*__countof_helper(program_name)) + 0), get_program_name_unkno" fullword wide
		 $s516= "traits::tcscpy_s(result_it, command_line_count - (result_it - command_line.get()), *source_it)" fullword wide
		 $s517= "traits::tcscpy_s(result_it, remaining_characters, *it)" fullword wide
		 $s518= "traits::tcscpy_s(variable.get(), required_count, source_it)" fullword wide
		 $s519= "traits::tcsncat_s( assert_buffer, assert_buffer_count, expression, characters_to_write)" fullword wide
		 $s520= "traits::tcsncat_s(assert_buffer, assert_buffer_count, pch, ffn - dot_dot_dot_length - p)" fullword wide
		 $s521= "traits::tcsncat_s(assert_buffer, assert_buffer_count, pch, ffn - ffn / 3 - dot_dot_dot_length)" fullword wide
		 $s522= "traits::tcsncat_s(assert_buffer, assert_buffer_count, pch + len - p, ffn / 6 - 1)" fullword wide
		 $s523= "traits::tcsncpy_s( argument_buffer.get() + directory_length, required_count - directory_length, file" fullword wide
		 $s524= "traits::tcsncpy_s(argument_buffer.get(), required_count, directory, directory_length)" fullword wide
		 $s525= "traits::tcsncpy_s( character_it, character_count - (character_it - character_first), *it, count)" fullword wide
		 $s526= "traits::tdupenv_s_crt(comspec_value.get_address_of(), nullptr, comspec_name)" fullword wide
		 $s527= "traits::tdupenv_s_crt(path_value.get_address_of(), nullptr, path_name)" fullword wide
		 $s528= "trinidad & tobago" fullword wide
		 $s529= "type_case_integer" fullword wide
		 $s530= "type == _IONBF || type == _IOFBF || type == _IOLBF" fullword wide
		 $s531= "tzset_from_environment_nolock" fullword wide
		 $s532= "tzset_from_system_nolock" fullword wide
		 $s533= "Unable to display RTC Message." fullword wide
		 $s534= "(unsigned)_nhandle" fullword wide
		 $s535= "(unsigned)_nhandle)" fullword wide
		 $s536= "UTF-16LEUNICODE" fullword wide
		 $s537= "> >::validate_and_update_state_at_end_of_format_string" fullword wide
		 $s538= "_VCrtDbgReportA" fullword wide
		 $s539= "_VCrtDbgReportW" fullword wide
		 $s540= "vector empty before pop" fullword wide
		 $s541= "vector iterator not dereferencable" fullword wide
		 $s542= "vector iterator + offset out of range" fullword wide
		 $s543= "void const*>(result_buffer)" fullword wide
		 $s544= "VS_VERSION_INFO" fullword wide
		 $s545= "wchar_t,class __crt_stdio_output::string_output_a" fullword wide
		 $s546= "wchar_t> > >::process" fullword wide
		 $s547= "wchar_t> > >::state_case_normal" fullword wide
		 $s548= "wchar_t> > >::state_case_size" fullword wide
		 $s549= "wchar_t> > >::type_case_integer" fullword wide
		 $s550= "wchar_t> > >::type_case_n" fullword wide
		 $s551= "wchar_t>::unget" fullword wide
		 $s552= "wchar_t>::validate" fullword wide
		 $s553= "wcscat_s(outmsg, (sizeof(*__countof_helper(outmsg)) + 0), message)" fullword wide
		 $s554= "wcscat_s(outstr, numberOfElements, (*(wchar_t **)((substr += ((sizeof(wchar_t *) + sizeof(int) - 1) " fullword wide
		 $s555= "wcscat_s(szLineMessage, 4096, szUserMessage)" fullword wide
		 $s556= "wcscpy_s(locale, numberOfElements, names->szLanguage)" fullword wide
		 $s557= "wcscpy_s(memory, size_in_elements, string)" fullword wide
		 $s558= "wcscpy_s(outLocaleName, cchLocaleName, buffer)" fullword wide
		 $s559= "wcscpy_s(output, sizeInChars, cacheout)" fullword wide
		 $s560= "wcscpy_s(pch_cat_locale, cch, lctemp)" fullword wide
		 $s561= "wcscpy_s(szOutMessage, 4096, szLineMessage)" fullword wide
		 $s562= "wcsncpy_s(cachein, cacheinLen, expr, charactersInExpression + 1)" fullword wide
		 $s563= "wcsncpy_s(cacheout, cacheoutLen, expr, charactersInExpression + 1)" fullword wide
		 $s564= "wcsncpy_s(lctemp, (sizeof(*__countof_helper(lctemp)) + 0), s, len)" fullword wide
		 $s565= "wcsncpy_s(localeNameCopy, cch+1, localeName, cch+1)" fullword wide
		 $s566= "wcsncpy_s(localeNameOutput, localeNameSizeInChars, expr, charactersInExpression + 1)" fullword wide
		 $s567= "wcsncpy_s(localeNameOutput, localeNameSizeInChars, names.szLocaleName, wcslen(names.szLocaleName) + " fullword wide
		 $s568= "wcsncpy_s(localeNameOutput, localeNameSizeInChars, _psetloc_data->_cacheLocaleName, (sizeof(*__count" fullword wide
		 $s569= "wcsncpy_s(lpOutStr->szLocaleName, (sizeof(*__countof_helper(lpOutStr->szLocaleName)) + 0), _psetloc_" fullword wide
		 $s570= "wcsncpy_s(names->szCodePage, (sizeof(*__countof_helper(names->szCodePage)) + 0), &wlocale[1], 16-1)" fullword wide
		 $s571= "wcsncpy_s(names->szCodePage, (sizeof(*__countof_helper(names->szCodePage)) + 0), wlocale, len)" fullword wide
		 $s572= "wcsncpy_s(names->szCountry, (sizeof(*__countof_helper(names->szCountry)) + 0), wlocale, len)" fullword wide
		 $s573= "wcsncpy_s(names->szLanguage, (sizeof(*__countof_helper(names->szLanguage)) + 0), wlocale, len)" fullword wide
		 $s574= "wcsncpy_s(_psetloc_data->_cacheLocaleName, (sizeof(*__countof_helper(_psetloc_data->_cacheLocaleName" fullword wide
		 $s575= "_wcstombs_l_helper" fullword wide
		 $s576= "_wcstombs_s_l(nullptr, outlocale, size, outwlocale, ((size_t)-1), &locale)" fullword wide
		 $s577= "_wcstombs_s_l(&size, nullptr, 0, outwlocale, 0, &locale)" fullword wide
		 $s578= "wcstombs_s(nullptr, szOutMessage2, 4096, szOutMessage, ((size_t)-1))" fullword wide
		 $s579= "wcstombs_s(&ret, szaOutMessage, 4096, szOutMessage, ((size_t)-1))" fullword wide
		 $s580= "whence == SEEK_SET || whence == SEEK_CUR || whence == SEEK_END" fullword wide
		 $s581= "wn_text(Character()))" fullword wide
		 $s582= "_wsetlocale_get_all" fullword wide
		 $s583= "_wsetlocale_nolock" fullword wide
		 $s584= "_wsetlocale_set_cat" fullword wide
		 $s585= "wt, ccs = UTF-8" fullword wide
		 $s586= "XXXXQVVVVUUTTTS" fullword wide
		 $a1= "###########################" fullword ascii
		 $a2= "((((((((((((((((((((((((((((((((((((((((((((((((((" fullword ascii
		 $a3= "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@" fullword ascii
		 $a4= "$0*010Z0e0l0#1,161B1L1a1f1l1" fullword ascii
		 $a5= ":$:(:,:0:4:8::`:d:h:l:p:t:x:" fullword ascii
		 $a6= ";$;@;H;L;P;T;X;;`;d;h;l;p;t;x;|;" fullword ascii
		 $a7= "0#0)0.040:0@0E0K0Q0W00b0h0n0s0y0" fullword ascii
		 $a8= "0123456789ABCDEF0123456789abcdef" fullword ascii
		 $a9= "0123456789ABCDEFabcdef-+Xx" fullword ascii
		 $a10= "0123456789ABCDEFabcdef-+XxPp" fullword ascii
		 $a11= "0123456789abcdefghijklmnopqrstuvwxyz" fullword ascii
		 $a12= "111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G" fullword ascii
		 $a13= "111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G222G222G222G222G222G222G" fullword ascii
		 $a14= "=#=*=1=8=?=F=M=T=[=b=i=p=" fullword ascii
		 $a15= "2,202H2L2P2T2X22`2d2h2l2" fullword ascii
		 $a16= "222G222G222G222G222G222G222G222G222G222G222G222G222G222G222G222G222G333G333G333G333G333G333G333G333G" fullword ascii
		 $a17= "2@2D2H2L2P2T2X22`2d2h2l2p2t2x2" fullword ascii
		 $a18= ",>2>9>@>F>K>Q>W>]>b>h>n>t>y>" fullword ascii
		 $a19= "333G333G333G333G333G333G333G333G333G333G333G444G444G444G444G333G333G444G444G444G555G666?" fullword ascii
		 $a20= "@@@@@@@@@@@@@@@@@@@@@@@@@@@@3.8.5" fullword ascii
		 $a21= "40484@4H4L4P4T4X44`4d4l4" fullword ascii
		 $a22= "5@5D5H5L5P5T5X55`5d5h5l5p5t5x5|5" fullword ascii
		 $a23= "5@5D5H5L5P5T5X55`5x5@6D6H6L6P6T6X66`6d6" fullword ascii
		 $a24= ">5>;>A>G>M>S>Z>a>h>o>v>}>" fullword ascii
		 $a25= "7(7,707D7H7L7d7h7l7p7t7x7|7" fullword ascii
		 $a26= "-----------------------------7d82751e2bc0858" fullword ascii
		 $a27= "83@3D3H3L3P3T3X33`3d3h3l3p3t3x3|3" fullword ascii
		 $a28= "8#8(82888F8K8U8[8i8n8x8~8" fullword ascii
		 $a29= "8%8,878?8E8M8S8[8d8i8n8}8" fullword ascii
		 $a30= "8@8D8H8L8P8T8X88`8d8h8l8p8t8x8|8" fullword ascii
		 $a31= "98?@?H?L?P?T?X??`?d?l?p?t?x?|?" fullword ascii
		 $a32= "aaa6nnn;lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9lll9kkk9lkk9" fullword ascii
		 $a33= "abcdefghijklmnopqrstuvwxyz" fullword ascii
		 $a34= "ABCDEFGHIJKLMNOPQRSTUVWXYZ" fullword ascii
		 $a35= "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789" fullword ascii
		 $a36= "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" fullword ascii
		 $a37= "/api/primewire/%s/requests" fullword ascii
		 $a38= "/api/primewire/%s/requests/arya_stark" fullword ascii
		 $a39= "/api/primewire/%s/requests/arya_stark/delete" fullword ascii
		 $a40= "/api/primewire/%s/requests/eren/delete" fullword ascii
		 $a41= "/api/primewire/%s/requests/geillis/delete" fullword ascii
		 $a42= "/api/primewire/%s/requests/macKenzie/delete" fullword ascii
		 $a43= "/api/primewire/%s/requests/randall/delete" fullword ascii
		 $a44= "/api/primewire/%s/requests/yeager/delete" fullword ascii
		 $a45= "/api/serv/requests/%s/Bialik_Gokhan/delete" fullword ascii
		 $a46= "/api/serv/requests/%s/Celal_Al" fullword ascii
		 $a47= "/api/serv/requests/%s/Hofstadter/delete" fullword ascii
		 $a48= "/api/serv/requests/%s/Nayyar_Sonmez/delete" fullword ascii
		 $a49= "/api/serv/requests/%s/Parsons_Sheldon/delete" fullword ascii
		 $a50= "/api/serv/requests/%s/Penny" fullword ascii
		 $a51= "/api/serv/requests/%s/Reshad_Strik" fullword ascii
		 $a52= "/api/serv/requests/%s/runfile/delete" fullword ascii
		 $a53= "/api/serv/requests/%s/Wolowitz_Helberg" fullword ascii
		 $a54= "/api/ZGV2aWNlcw==/Y21WeGRXVnpkSE09" fullword ascii
		 $a55= ".?AU?$error_info_injector@Vjson_parser_error@json_parser@property_tree@boost@@@exception_detail@boos" fullword ascii
		 $a56= ".?AU?$error_info_injector@Vptree_bad_data@property_tree@boost@@@exception_detail@boost@@" fullword ascii
		 $a57= ".?AU?$error_info_injector@Vptree_bad_path@property_tree@boost@@@exception_detail@boost@@" fullword ascii
		 $a58= ".?AU_Chore@details@Concurrency@@" fullword ascii
		 $a59= ".?AU_Crt_new_delete@std@@" fullword ascii
		 $a60= ".?AUIExecutionContext@Concurrency@@" fullword ascii
		 $a61= ".?AUIExecutionResource@Concurrency@@" fullword ascii
		 $a62= ".?AUIResourceManager@Concurrency@@" fullword ascii
		 $a63= ".?AUIScheduler@Concurrency@@" fullword ascii
		 $a64= ".?AUISchedulerProxy@Concurrency@@" fullword ascii
		 $a65= ".?AUIThreadProxy@Concurrency@@" fullword ascii
		 $a66= ".?AUIThreadProxyFactory@details@Concurrency@@" fullword ascii
		 $a67= ".?AUITopologyExecutionResource@Concurrency@@" fullword ascii
		 $a68= ".?AUITopologyNode@Concurrency@@" fullword ascii
		 $a69= ".?AUTopologyObject@GlobalCore@details@Concurrency@@" fullword ascii
		 $a70= ".?AUTopologyObject@GlobalNode@details@Concurrency@@" fullword ascii
		 $a71= ".?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@" fullword ascii
		 $a72= ".?AV?$basic_fstream@DU?$char_traits@D@std@@@std@@" fullword ascii
		 $a73= ".?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@" fullword ascii
		 $a74= ".?AV?$basic_ios@DU?$char_traits@D@std@@@std@@" fullword ascii
		 $a75= ".?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@" fullword ascii
		 $a76= ".?AV?$basic_istream@DU?$char_traits@D@std@@@std@@" fullword ascii
		 $a77= ".?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@" fullword ascii
		 $a78= ".?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@" fullword ascii
		 $a79= ".?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@" fullword ascii
		 $a80= ".?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@" fullword ascii
		 $a81= ".?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@" fullword ascii
		 $a82= ".?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@" fullword ascii
		 $a83= ".?AV?$clone_impl@U?$error_info_injector@Vjson_parser_error@json_parser@property_tree@boost@@@excepti" fullword ascii
		 $a84= ".?AV?$clone_impl@U?$error_info_injector@Vptree_bad_data@property_tree@boost@@@exception_detail@boost" fullword ascii
		 $a85= ".?AV?$clone_impl@U?$error_info_injector@Vptree_bad_path@property_tree@boost@@@exception_detail@boost" fullword ascii
		 $a86= ".?AV?$codecvt@DDU_Mbstatet@@@std@@" fullword ascii
		 $a87= ".?AV?$codecvt@GDU_Mbstatet@@@std@@" fullword ascii
		 $a88= ".?AV?$codecvt_utf8_utf16@_W$0BAPPPP@$0A@@std@@" fullword ascii
		 $a89= ".?AV?$codecvt@_WDU_Mbstatet@@@std@@" fullword ascii
		 $a90= ".?AV?$holder@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@any@boost@@" fullword ascii
		 $a91= ".?AV?$holder@V?$string_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$id_tran" fullword ascii
		 $a92= ".?AV?$_MallocaArrayHolder@PAVContext@Concurrency@@@details@Concurrency@@" fullword ascii
		 $a93= ".?AV?$_MallocaArrayHolder@PAVevent@Concurrency@@@details@Concurrency@@" fullword ascii
		 $a94= ".?AV?$money_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@" fullword ascii
		 $a95= ".?AV?$money_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@" fullword ascii
		 $a96= ".?AV?$money_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@" fullword ascii
		 $a97= ".?AV?$moneypunct@D$00@std@@" fullword ascii
		 $a98= ".?AV?$moneypunct@D$0A@@std@@" fullword ascii
		 $a99= ".?AV?$moneypunct@G$00@std@@" fullword ascii
		 $a100= ".?AV?$moneypunct@G$0A@@std@@" fullword ascii
		 $a101= ".?AV?$moneypunct@_W$00@std@@" fullword ascii
		 $a102= ".?AV?$moneypunct@_W$0A@@std@@" fullword ascii
		 $a103= ".?AV?$money_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@" fullword ascii
		 $a104= ".?AV?$money_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@" fullword ascii
		 $a105= ".?AV?$money_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@" fullword ascii
		 $a106= ".?AV?$_Node_class@DV?$regex_traits@D@std@@@std@@" fullword ascii
		 $a107= ".?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@" fullword ascii
		 $a108= ".?AV?$num_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@" fullword ascii
		 $a109= ".?AV?$num_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@" fullword ascii
		 $a110= ".?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@" fullword ascii
		 $a111= ".?AV?$num_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@" fullword ascii
		 $a112= ".?AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@" fullword ascii
		 $a113= ".?AV?$_Ref_count_obj_alloc@V__ExceptionPtr@@U?$_StaticAllocator@H@@@std@@" fullword ascii
		 $a114= ".?AV?$_Ref_count_obj@V__ExceptionPtr@@@std@@" fullword ascii
		 $a115= ".?AV?$string_path@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@U?$id_translator@V?$" fullword ascii
		 $a116= ".?AV?$ThreadProxyFactory@VFreeThreadProxy@details@Concurrency@@@details@Concurrency@@" fullword ascii
		 $a117= ".?AV?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@" fullword ascii
		 $a118= ".?AV?$time_get@GV?$istreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@" fullword ascii
		 $a119= ".?AV?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@" fullword ascii
		 $a120= ".?AV?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@" fullword ascii
		 $a121= ".?AV?$time_put@GV?$ostreambuf_iterator@GU?$char_traits@G@std@@@std@@@std@@" fullword ascii
		 $a122= ".?AV?$time_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@" fullword ascii
		 $a123= ".?AV?$wstring_convert@V?$codecvt_utf8_utf16@_W$0BAPPPP@$0A@@std@@_WV?$allocator@_W@2@V?$allocator@D@" fullword ascii
		 $a124= ".?AVbad_array_new_length@std@@" fullword ascii
		 $a125= ".?AVCacheLocalScheduleGroup@details@Concurrency@@" fullword ascii
		 $a126= ".?AVCacheLocalScheduleGroupSegment@details@Concurrency@@" fullword ascii
		 $a127= ".?AV_CancellationTokenRegistration@details@Concurrency@@" fullword ascii
		 $a128= ".?AVCancellationTokenRegistration_TaskProc@details@Concurrency@@" fullword ascii
		 $a129= ".?AVclone_base@exception_detail@boost@@" fullword ascii
		 $a130= ".?AVContextBase@details@Concurrency@@" fullword ascii
		 $a131= ".?AVContext@Concurrency@@" fullword ascii
		 $a132= ".?AVcontext_self_unblock@Concurrency@@" fullword ascii
		 $a133= ".?AVcontext_unblock_unbalanced@Concurrency@@" fullword ascii
		 $a134= ".?AVExecutionResource@details@Concurrency@@" fullword ascii
		 $a135= ".?AVExternalContextBase@details@Concurrency@@" fullword ascii
		 $a136= ".?AVfailure@ios_base@std@@" fullword ascii
		 $a137= ".?AVFairScheduleGroup@details@Concurrency@@" fullword ascii
		 $a138= ".?AVFairScheduleGroupSegment@details@Concurrency@@" fullword ascii
		 $a139= ".?AVfile_parser_error@property_tree@boost@@" fullword ascii
		 $a140= ".?AVFreeThreadProxy@details@Concurrency@@" fullword ascii
		 $a141= ".?AVFreeThreadProxyFactory@details@Concurrency@@" fullword ascii
		 $a142= ".?AVGdiplusBase@Gdiplus@@" fullword ascii
		 $a143= ".?AV_Generic_error_category@std@@" fullword ascii
		 $a144= ".?AVimproper_lock@Concurrency@@" fullword ascii
		 $a145= ".?AVimproper_scheduler_attach@Concurrency@@" fullword ascii
		 $a146= ".?AVimproper_scheduler_reference@Concurrency@@" fullword ascii
		 $a147= ".?AVInternalContextBase@details@Concurrency@@" fullword ascii
		 $a148= ".?AV_Interruption_exception@details@Concurrency@@" fullword ascii
		 $a149= ".?AVinvalid_argument@std@@" fullword ascii
		 $a150= ".?AVinvalid_operation@Concurrency@@" fullword ascii
		 $a151= ".?AVinvalid_oversubscribe_operation@Concurrency@@" fullword ascii
		 $a152= ".?AVinvalid_scheduler_policy_key@Concurrency@@" fullword ascii
		 $a153= ".?AVinvalid_scheduler_policy_thread_specification@Concurrency@@" fullword ascii
		 $a154= ".?AVinvalid_scheduler_policy_value@Concurrency@@" fullword ascii
		 $a155= ".?AV_Iostream_error_category@std@@" fullword ascii
		 $a156= ".?AVjson_parser_error@json_parser@property_tree@boost@@" fullword ascii
		 $a157= ".?AVmissing_wait@Concurrency@@" fullword ascii
		 $a158= ".?AVMultiWaitBlock@details@Concurrency@@" fullword ascii
		 $a159= ".?AVnested_scheduler_missing_detach@Concurrency@@" fullword ascii
		 $a160= ".?AV_Node_end_group@std@@" fullword ascii
		 $a161= ".?AV__non_rtti_object@std@@" fullword ascii
		 $a162= ".?AVplaceholder@any@boost@@" fullword ascii
		 $a163= ".?AVptree_bad_data@property_tree@boost@@" fullword ascii
		 $a164= ".?AVptree_bad_path@property_tree@boost@@" fullword ascii
		 $a165= ".?AVptree_error@property_tree@boost@@" fullword ascii
		 $a166= ".?AVRealizedChore@details@Concurrency@@" fullword ascii
		 $a167= ".?AV_Ref_count_base@std@@" fullword ascii
		 $a168= ".?AV_RefCounter@details@Concurrency@@" fullword ascii
		 $a169= ".?AVResourceManager@details@Concurrency@@" fullword ascii
		 $a170= ".?AVScheduleGroupBase@details@Concurrency@@" fullword ascii
		 $a171= ".?AVScheduleGroup@Concurrency@@" fullword ascii
		 $a172= ".?AVScheduleGroupSegmentBase@details@Concurrency@@" fullword ascii
		 $a173= ".?AVSchedulerBase@details@Concurrency@@" fullword ascii
		 $a174= ".?AVScheduler@Concurrency@@" fullword ascii
		 $a175= ".?AVSchedulerProxy@details@Concurrency@@" fullword ascii
		 $a176= ".?AVscheduler_resource_allocation_error@Concurrency@@" fullword ascii
		 $a177= ".?AVscheduler_worker_creation_error@Concurrency@@" fullword ascii
		 $a178= ".?AVSingleWaitBlock@details@Concurrency@@" fullword ascii
		 $a179= ".?AVstl_condition_variable_concrt@details@Concurrency@@" fullword ascii
		 $a180= ".?AVstl_condition_variable_interface@details@Concurrency@@" fullword ascii
		 $a181= ".?AVstl_condition_variable_vista@details@Concurrency@@" fullword ascii
		 $a182= ".?AVstl_condition_variable_win7@details@Concurrency@@" fullword ascii
		 $a183= ".?AVstl_critical_section_concrt@details@Concurrency@@" fullword ascii
		 $a184= ".?AVstl_critical_section_interface@details@Concurrency@@" fullword ascii
		 $a185= ".?AVstl_critical_section_vista@details@Concurrency@@" fullword ascii
		 $a186= ".?AVstl_critical_section_win7@details@Concurrency@@" fullword ascii
		 $a187= ".?AVThreadInternalContext@details@Concurrency@@" fullword ascii
		 $a188= ".?AVThreadProxy@details@Concurrency@@" fullword ascii
		 $a189= ".?AVThreadScheduler@details@Concurrency@@" fullword ascii
		 $a190= ".?AVThreadVirtualProcessor@details@Concurrency@@" fullword ascii
		 $a191= ".?AVTimedSingleWaitBlock@details@Concurrency@@" fullword ascii
		 $a192= ".?AVunsupported_os@Concurrency@@" fullword ascii
		 $a193= ".?AVVirtualProcessor@details@Concurrency@@" fullword ascii
		 $a194= ".?AVWaitAllBlock@details@Concurrency@@" fullword ascii
		 $a195= ".?AVWaitAnyBlock@details@Concurrency@@" fullword ascii
		 $a196= ".?AVWaitBlock@details@Concurrency@@" fullword ascii
		 $a197= "aW5zdGFsbCBwcm9nOiBDcmVhdGUgVGFzayBhZnRlciA1IG1pbiB0byBydW4gRmlsZSBmcm9tIHRtcA==" fullword ascii
		 $a198= "aW5zdGFsbCBwcm9nOiBUaGVyZSBpcyBubyBvbGQgZmlsZSBpbiB0ZW1wLg==" fullword ascii
		 $a199= "aW5zdGFsbCBwcm9nOiBwcm9nIHdpbGwgZGVsZXRlIG9sZCB0bXAgZmlsZQ==" fullword ascii
		 $a200= "basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@property_tree@boost@@@property_tree@boos" fullword ascii
		 $a201= "CASTCOLUMNCOMMITCONFLICTCROSSCURRENT_TIMESTAMPRIMARYDEFERREDISTINCTDROPFAILFROMFULLGLOBYIFISNULLORDE" fullword ascii
		 $a202= "CCC1888@111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G111G" fullword ascii
		 $a203= "ConnectedAccountState.exe" fullword ascii
		 $a204= "ConnectedAccountState.txt" fullword ascii
		 $a205= "ConvertStringSecurityDescriptorToSecurityDescriptorA" fullword ascii
		 $a206= "daenerys=%s&betriebssystem=%s&anwendung=%s&AV=%s&frankie=%s" fullword ascii
		 $a207= ":@;D;H;L;P;T;X;;`;d;h;l;p;t;x;|;" fullword ascii
		 $a208= ";@;D;H;L;P;T;X;;`;d;h;l;p;t;x;|;" fullword ascii
		 $a209= "=@=D=H=L=P=T=X==`=d=h=l=p=t=x=|=" fullword ascii
		 $a210= "DIATEJOINSERTMATCHPLANALYZEPRAGMABORTVALUESVIRTUALIMITWHENWHERENAMEAFTEREPLACEANDEFAULTAUTOINCREMENT" fullword ascii
		 $a211= "@@@exception_detail@boost@@" fullword ascii
		 $a212= "f:ddvctoolscrtcrtw32miscstllcmapstringa.cpp" fullword ascii
		 $a213= "f:ddvctoolscrtcrtw32stdcpplocale0.cpp" fullword ascii
		 $a214= "f:ddvctoolscrtcrtw32stdcpp_tolower.c" fullword ascii
		 $a215= "f:ddvctoolscrtcrtw32stdhppxutility" fullword ascii
		 $a216= "f:ddvctoolscrtvcruntimesrcehstd_type_info.cpp" fullword ascii
		 $a217= "f:ddvctoolscrtvcruntimesrcinternalper_thread_data.cpp" fullword ascii
		 $a218= "FreeLibraryWhenCallbackReturns" fullword ascii
		 $a219= "Gcdefghhijggklmnopqqqqqqqqrstuvwxyzz{|" fullword ascii
		 $a220= "GdipCreateBitmapFromHBITMAP" fullword ascii
		 $a221= "GdipCreateBitmapFromScan0" fullword ascii
		 $a222= "`generic-class-parameter-" fullword ascii
		 $a223= "`generic-method-parameter-" fullword ascii
		 $a224= "GetCurrentProcessorNumber" fullword ascii
		 $a225= "GetCurrentProcessorNumberEx" fullword ascii
		 $a226= "GetFileInformationByHandleEx" fullword ascii
		 $a227= "GetLogicalProcessorInformation" fullword ascii
		 $a228= "GetLogicalProcessorInformationEx" fullword ascii
		 $a229= "GetSystemTimePreciseAsFileTime" fullword ascii
		 $a230= "GetUserObjectInformationW" fullword ascii
		 $a231= "GetVolumePathNamesForVolumeNameW" fullword ascii
		 $a232= "GHIJKLMNOPQRS3UVWXYZ[]^_" fullword ascii
		 $a233= "GHIJKLMNOPQRSzUVWXYZ[]^_" fullword ascii
		 $a234= "H=P=T=X==`=d=h=l=p=t=x=|=" fullword ascii
		 $a235= "http://doloresabernathy.icu/task.txt" fullword ascii
		 $a236= "InitializeConditionVariable" fullword ascii
		 $a237= "InitializeCriticalSection" fullword ascii
		 $a238= "InitializeCriticalSectionAndSpinCount" fullword ascii
		 $a239= "InitializeCriticalSectionEx" fullword ascii
		 $a240= "InterlockedCompareExchange" fullword ascii
		 $a241= "InterlockedPushEntrySList" fullword ascii
		 $a242= "IsProcessorFeaturePresent" fullword ascii
		 $a243= ":Jan:January:Feb:February:Mar:March:Apr:April:May:May:Jun:June:Jul:July:Aug:August:Sep:September:Oct" fullword ascii
		 $a244= "k~~kkkkkkkkkkkkkk~~~~~~~~~~~~~~~~~" fullword ascii
		 $a245= "li%@%@nk.%@%@S%@a%@%@%@v%@e" fullword ascii
		 $a246= "minkernelcrtsucrtinccorecrt_internal_stdio_output.h" fullword ascii
		 $a247= "minkernelcrtsucrtinccorecrt_internal_traits.h" fullword ascii
		 $a248= "minkernelcrtsucrtsrcappcrtinternalper_thread_data.cpp" fullword ascii
		 $a249= "minkernelcrtsucrtsrcappcrtinternalstring_utilities.cpp" fullword ascii
		 $a250= "minkernelcrtsucrtsrcappcrtlocalecomparestringa.cpp" fullword ascii
		 $a251= "minkernelcrtsucrtsrcappcrtlocalegetlocaleinfoa.cpp" fullword ascii
		 $a252= "minkernelcrtsucrtsrcappcrtlocalegetstringtypea.cpp" fullword ascii
		 $a253= "minkernelcrtsucrtsrcappcrtlocaleinitctype.cpp" fullword ascii
		 $a254= "minkernelcrtsucrtsrcappcrtlocaleinitmon.cpp" fullword ascii
		 $a255= "minkernelcrtsucrtsrcappcrtlocaleinitnum.cpp" fullword ascii
		 $a256= "minkernelcrtsucrtsrcappcrtlocaleinittime.cpp" fullword ascii
		 $a257= "minkernelcrtsucrtsrcappcrtlocalelcmapstringa.cpp" fullword ascii
		 $a258= "minkernelcrtsucrtsrcappcrtlocalesetlocale.cpp" fullword ascii
		 $a259= "minkernelcrtsucrtsrcappcrtlocalewsetlocale.cpp" fullword ascii
		 $a260= "minkernelcrtsucrtsrcappcrtlowiochsize.cpp" fullword ascii
		 $a261= "minkernelcrtsucrtsrcappcrtlowioosfinfo.cpp" fullword ascii
		 $a262= "minkernelcrtsucrtsrcappcrtlowioread.cpp" fullword ascii
		 $a263= "minkernelcrtsucrtsrcappcrtmbstringmbctype.cpp" fullword ascii
		 $a264= "minkernelcrtsucrtsrcappcrtstartupargv_parsing.cpp" fullword ascii
		 $a265= "minkernelcrtsucrtsrcappcrtstartupargv_wildcards.cpp" fullword ascii
		 $a266= "minkernelcrtsucrtsrcappcrtstartuponexit.cpp" fullword ascii
		 $a267= "minkernelcrtsucrtsrcappcrtstdio_file.cpp" fullword ascii
		 $a268= "minkernelcrtsucrtsrcappcrtstdio_getbuf.cpp" fullword ascii
		 $a269= "minkernelcrtsucrtsrcappcrtstdiosetvbuf.cpp" fullword ascii
		 $a270= "minkernelcrtsucrtsrcappcrtstdio_sftbuf.cpp" fullword ascii
		 $a271= "minkernelcrtsucrtsrcappcrtstdiostream.cpp" fullword ascii
		 $a272= "minkernelcrtsucrtsrcappcrttimegmtime.cpp" fullword ascii
		 $a273= "minkernelcrtsucrtsrcappcrttimestrftime.cpp" fullword ascii
		 $a274= "minkernelcrtsucrtsrcappcrttimetzset.cpp" fullword ascii
		 $a275= "minkernelcrtsucrtsrcappcrttimewcsftime.cpp" fullword ascii
		 $a276= "minkernelcrtsucrtsrcdesktopcrtenvenvironment_initialization.cpp" fullword ascii
		 $a277= "minkernelcrtsucrtsrcdesktopcrtenvget_environment_from_os.cpp" fullword ascii
		 $a278= "minkernelcrtsucrtsrcdesktopcrtenvsetenv.cpp" fullword ascii
		 $a279= "minkernelcrtsucrtsrcdesktopcrtexeccenvarg.cpp" fullword ascii
		 $a280= "minkernelcrtsucrtsrcdesktopcrtexecspawnv.cpp" fullword ascii
		 $a281= "minkernelcrtsucrtsrcdesktopcrtexecspawnvp.cpp" fullword ascii
		 $a282= "name=%s&os=%s&appname=%s&av=%s" fullword ascii
		 $a283= "naturaleftouterightfullinnercross" fullword ascii
		 $a284= "`non-type-template-parameter" fullword ascii
		 $a285= ":October:Nov:November:Dec:December" fullword ascii
		 $a286= "on_detail@boost@@@exception_detail@boost@@" fullword ascii
		 $a287= "OOO5OOO5OOO5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5PPP5QQQ5PPP5QQQ5QQQ5QQQ5" fullword ascii
		 $a288= "PhoneProvidersHandlerme.txt" fullword ascii
		 $a289= "PhoneProvidersHandlerPhoneProviders.exe" fullword ascii
		 $a290= "QQQ5QQQ5QQQ5QQQ5QQQ5QQQ5QQQ5QQQ5PPP5UUU7:::$" fullword ascii
		 $a291= "RALTERAISEXCLUSIVEXISTSAVEPOINTERSECTRIGGEREFERENCESCONSTRAINTOFFSETEMPORARYUNIQUERYWITHOUTERELEASEA" fullword ascii
		 $a292= "regex_error(error_syntax)" fullword ascii
		 $a293= "RegisterWaitForSingleObject" fullword ascii
		 $a294= "REINDEXEDESCAPEACHECKEYBEFOREIGNOREGEXPLAINSTEADDATABASELECTABLEFTHENDEFERRABLELSEXCEPTRANSACTIONATU" fullword ascii
		 $a295= "RESTRICTRIGHTROLLBACKROWUNIONUSINGVACUUMVIEWINITIALLY" fullword ascii
		 $a296= "reverse_unordered_selects" fullword ascii
		 $a297= "SetFileInformationByHandle" fullword ascii
		 $a298= "SetUnhandledExceptionFilter" fullword ascii
		 $a299= "slator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@property_tree@boost@@@property" fullword ascii
		 $a300= "SleepConditionVariableSRW" fullword ascii
		 $a301= "sqlite_compileoption_used" fullword ascii
		 $a302= "%s%s%p%s%zd%s%d%s%s%s%s%s" fullword ascii
		 $a303= ":Sun:Sunday:Mon:Monday:Tue:Tuesday:Wed:Wednesday:Thu:Thursday:Fri:Friday:Sat:Saturday" fullword ascii
		 $a304= "TargetOversubscriptionFactor" fullword ascii
		 $a305= "`template-type-parameter-" fullword ascii
		 $a306= "theme/theme/_rels/themeManager.xml.rels" fullword ascii
		 $a307= "theme/theme/_rels/themeManager.xml.relsPK" fullword ascii
		 $a308= "theme/theme/themeManager.xml" fullword ascii
		 $a309= "theme/theme/themeManager.xmlPK" fullword ascii
		 $a310= "_tree@boost@@@any@boost@@" fullword ascii
		 $a311= "TryAcquireSRWLockExclusive" fullword ascii
		 $a312= "TTACHAVINGROUPDATEBEGINNERECURSIVEBETWEENOTNULLIKECASCADELETECASECOLLATECREATECURRENT_DATEDETACHIMME" fullword ascii
		 $a313= "UnVuIEZpbGU6IE15IHByb2cgaXMgRXhpdC4=" fullword ascii
		 $a314= "VXBkYXRlIHByb2c6IFRoZXJlIGlzIG5vIG9sZCBmaWxlIGluIHRlbXAu" fullword ascii
		 $a315= "WaitForThreadpoolTimerCallbacks" fullword ascii
		 $a316= "WWW4NNN5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5OOO5PPP5OOO5" fullword ascii
		 $a317= "X11`1d1h1l1p1t1x1|1l2q2}2" fullword ascii
		 $a318= "ZFBMD230009880300009620000057310000c93f00004a750000449600002ca50000fccf0000b6ef000071fe0000" fullword ascii

		 $hex1= {24613130303d20222e}
		 $hex2= {24613130313d20222e}
		 $hex3= {24613130323d20222e}
		 $hex4= {24613130333d20222e}
		 $hex5= {24613130343d20222e}
		 $hex6= {24613130353d20222e}
		 $hex7= {24613130363d20222e}
		 $hex8= {24613130373d20222e}
		 $hex9= {24613130383d20222e}
		 $hex10= {24613130393d20222e}
		 $hex11= {246131303d20223031}
		 $hex12= {24613131303d20222e}
		 $hex13= {24613131313d20222e}
		 $hex14= {24613131323d20222e}
		 $hex15= {24613131333d20222e}
		 $hex16= {24613131343d20222e}
		 $hex17= {24613131353d20222e}
		 $hex18= {24613131363d20222e}
		 $hex19= {24613131373d20222e}
		 $hex20= {24613131383d20222e}
		 $hex21= {24613131393d20222e}
		 $hex22= {246131313d20223031}
		 $hex23= {24613132303d20222e}
		 $hex24= {24613132313d20222e}
		 $hex25= {24613132323d20222e}
		 $hex26= {24613132333d20222e}
		 $hex27= {24613132343d20222e}
		 $hex28= {24613132353d20222e}
		 $hex29= {24613132363d20222e}
		 $hex30= {24613132373d20222e}
		 $hex31= {24613132383d20222e}
		 $hex32= {24613132393d20222e}
		 $hex33= {246131323d20223131}
		 $hex34= {24613133303d20222e}
		 $hex35= {24613133313d20222e}
		 $hex36= {24613133323d20222e}
		 $hex37= {24613133333d20222e}
		 $hex38= {24613133343d20222e}
		 $hex39= {24613133353d20222e}
		 $hex40= {24613133363d20222e}
		 $hex41= {24613133373d20222e}
		 $hex42= {24613133383d20222e}
		 $hex43= {24613133393d20222e}
		 $hex44= {246131333d20223131}
		 $hex45= {24613134303d20222e}
		 $hex46= {24613134313d20222e}
		 $hex47= {24613134323d20222e}
		 $hex48= {24613134333d20222e}
		 $hex49= {24613134343d20222e}
		 $hex50= {24613134353d20222e}
		 $hex51= {24613134363d20222e}
		 $hex52= {24613134373d20222e}
		 $hex53= {24613134383d20222e}
		 $hex54= {24613134393d20222e}
		 $hex55= {246131343d20223d23}
		 $hex56= {24613135303d20222e}
		 $hex57= {24613135313d20222e}
		 $hex58= {24613135323d20222e}
		 $hex59= {24613135333d20222e}
		 $hex60= {24613135343d20222e}
		 $hex61= {24613135353d20222e}
		 $hex62= {24613135363d20222e}
		 $hex63= {24613135373d20222e}
		 $hex64= {24613135383d20222e}
		 $hex65= {24613135393d20222e}
		 $hex66= {246131353d2022322c}
		 $hex67= {24613136303d20222e}
		 $hex68= {24613136313d20222e}
		 $hex69= {24613136323d20222e}
		 $hex70= {24613136333d20222e}
		 $hex71= {24613136343d20222e}
		 $hex72= {24613136353d20222e}
		 $hex73= {24613136363d20222e}
		 $hex74= {24613136373d20222e}
		 $hex75= {24613136383d20222e}
		 $hex76= {24613136393d20222e}
		 $hex77= {246131363d20223232}
		 $hex78= {24613137303d20222e}
		 $hex79= {24613137313d20222e}
		 $hex80= {24613137323d20222e}
		 $hex81= {24613137333d20222e}
		 $hex82= {24613137343d20222e}
		 $hex83= {24613137353d20222e}
		 $hex84= {24613137363d20222e}
		 $hex85= {24613137373d20222e}
		 $hex86= {24613137383d20222e}
		 $hex87= {24613137393d20222e}
		 $hex88= {246131373d20223240}
		 $hex89= {24613138303d20222e}
		 $hex90= {24613138313d20222e}
		 $hex91= {24613138323d20222e}
		 $hex92= {24613138333d20222e}
		 $hex93= {24613138343d20222e}
		 $hex94= {24613138353d20222e}
		 $hex95= {24613138363d20222e}
		 $hex96= {24613138373d20222e}
		 $hex97= {24613138383d20222e}
		 $hex98= {24613138393d20222e}
		 $hex99= {246131383d20222c3e}
		 $hex100= {24613139303d20222e}
		 $hex101= {24613139313d20222e}
		 $hex102= {24613139323d20222e}
		 $hex103= {24613139333d20222e}
		 $hex104= {24613139343d20222e}
		 $hex105= {24613139353d20222e}
		 $hex106= {24613139363d20222e}
		 $hex107= {24613139373d202261}
		 $hex108= {24613139383d202261}
		 $hex109= {24613139393d202261}
		 $hex110= {246131393d20223333}
		 $hex111= {2461313d2022232323}
		 $hex112= {24613230303d202262}
		 $hex113= {24613230313d202243}
		 $hex114= {24613230323d202243}
		 $hex115= {24613230333d202243}
		 $hex116= {24613230343d202243}
		 $hex117= {24613230353d202243}
		 $hex118= {24613230363d202264}
		 $hex119= {24613230373d20223a}
		 $hex120= {24613230383d20223b}
		 $hex121= {24613230393d20223d}
		 $hex122= {246132303d20224040}
		 $hex123= {24613231303d202244}
		 $hex124= {24613231313d202240}
		 $hex125= {24613231323d202266}
		 $hex126= {24613231333d202266}
		 $hex127= {24613231343d202266}
		 $hex128= {24613231353d202266}
		 $hex129= {24613231363d202266}
		 $hex130= {24613231373d202266}
		 $hex131= {24613231383d202246}
		 $hex132= {24613231393d202247}
		 $hex133= {246132313d20223430}
		 $hex134= {24613232303d202247}
		 $hex135= {24613232313d202247}
		 $hex136= {24613232323d202260}
		 $hex137= {24613232333d202260}
		 $hex138= {24613232343d202247}
		 $hex139= {24613232353d202247}
		 $hex140= {24613232363d202247}
		 $hex141= {24613232373d202247}
		 $hex142= {24613232383d202247}
		 $hex143= {24613232393d202247}
		 $hex144= {246132323d20223540}
		 $hex145= {24613233303d202247}
		 $hex146= {24613233313d202247}
		 $hex147= {24613233323d202247}
		 $hex148= {24613233333d202247}
		 $hex149= {24613233343d202248}
		 $hex150= {24613233353d202268}
		 $hex151= {24613233363d202249}
		 $hex152= {24613233373d202249}
		 $hex153= {24613233383d202249}
		 $hex154= {24613233393d202249}
		 $hex155= {246132333d20223540}
		 $hex156= {24613234303d202249}
		 $hex157= {24613234313d202249}
		 $hex158= {24613234323d202249}
		 $hex159= {24613234333d20223a}
		 $hex160= {24613234343d20226b}
		 $hex161= {24613234353d20226c}
		 $hex162= {24613234363d20226d}
		 $hex163= {24613234373d20226d}
		 $hex164= {24613234383d20226d}
		 $hex165= {24613234393d20226d}
		 $hex166= {246132343d20223e35}
		 $hex167= {24613235303d20226d}
		 $hex168= {24613235313d20226d}
		 $hex169= {24613235323d20226d}
		 $hex170= {24613235333d20226d}
		 $hex171= {24613235343d20226d}
		 $hex172= {24613235353d20226d}
		 $hex173= {24613235363d20226d}
		 $hex174= {24613235373d20226d}
		 $hex175= {24613235383d20226d}
		 $hex176= {24613235393d20226d}
		 $hex177= {246132353d20223728}
		 $hex178= {24613236303d20226d}
		 $hex179= {24613236313d20226d}
		 $hex180= {24613236323d20226d}
		 $hex181= {24613236333d20226d}
		 $hex182= {24613236343d20226d}
		 $hex183= {24613236353d20226d}
		 $hex184= {24613236363d20226d}
		 $hex185= {24613236373d20226d}
		 $hex186= {24613236383d20226d}
		 $hex187= {24613236393d20226d}
		 $hex188= {246132363d20222d2d}
		 $hex189= {24613237303d20226d}
		 $hex190= {24613237313d20226d}
		 $hex191= {24613237323d20226d}
		 $hex192= {24613237333d20226d}
		 $hex193= {24613237343d20226d}
		 $hex194= {24613237353d20226d}
		 $hex195= {24613237363d20226d}
		 $hex196= {24613237373d20226d}
		 $hex197= {24613237383d20226d}
		 $hex198= {24613237393d20226d}
		 $hex199= {246132373d20223833}
		 $hex200= {24613238303d20226d}
		 $hex201= {24613238313d20226d}
		 $hex202= {24613238323d20226e}
		 $hex203= {24613238333d20226e}
		 $hex204= {24613238343d202260}
		 $hex205= {24613238353d20223a}
		 $hex206= {24613238363d20226f}
		 $hex207= {24613238373d20224f}
		 $hex208= {24613238383d202250}
		 $hex209= {24613238393d202250}
		 $hex210= {246132383d20223823}
		 $hex211= {24613239303d202251}
		 $hex212= {24613239313d202252}
		 $hex213= {24613239323d202272}
		 $hex214= {24613239333d202252}
		 $hex215= {24613239343d202252}
		 $hex216= {24613239353d202252}
		 $hex217= {24613239363d202272}
		 $hex218= {24613239373d202253}
		 $hex219= {24613239383d202253}
		 $hex220= {24613239393d202273}
		 $hex221= {246132393d20223825}
		 $hex222= {2461323d2022282828}
		 $hex223= {24613330303d202253}
		 $hex224= {24613330313d202273}
		 $hex225= {24613330323d202225}
		 $hex226= {24613330333d20223a}
		 $hex227= {24613330343d202254}
		 $hex228= {24613330353d202260}
		 $hex229= {24613330363d202274}
		 $hex230= {24613330373d202274}
		 $hex231= {24613330383d202274}
		 $hex232= {24613330393d202274}
		 $hex233= {246133303d20223840}
		 $hex234= {24613331303d20225f}
		 $hex235= {24613331313d202254}
		 $hex236= {24613331323d202254}
		 $hex237= {24613331333d202255}
		 $hex238= {24613331343d202256}
		 $hex239= {24613331353d202257}
		 $hex240= {24613331363d202257}
		 $hex241= {24613331373d202258}
		 $hex242= {24613331383d20225a}
		 $hex243= {246133313d20223938}
		 $hex244= {246133323d20226161}
		 $hex245= {246133333d20226162}
		 $hex246= {246133343d20224142}
		 $hex247= {246133353d20226162}
		 $hex248= {246133363d20224142}
		 $hex249= {246133373d20222f61}
		 $hex250= {246133383d20222f61}
		 $hex251= {246133393d20222f61}
		 $hex252= {2461333d2022404040}
		 $hex253= {246134303d20222f61}
		 $hex254= {246134313d20222f61}
		 $hex255= {246134323d20222f61}
		 $hex256= {246134333d20222f61}
		 $hex257= {246134343d20222f61}
		 $hex258= {246134353d20222f61}
		 $hex259= {246134363d20222f61}
		 $hex260= {246134373d20222f61}
		 $hex261= {246134383d20222f61}
		 $hex262= {246134393d20222f61}
		 $hex263= {2461343d202224302a}
		 $hex264= {246135303d20222f61}
		 $hex265= {246135313d20222f61}
		 $hex266= {246135323d20222f61}
		 $hex267= {246135333d20222f61}
		 $hex268= {246135343d20222f61}
		 $hex269= {246135353d20222e3f}
		 $hex270= {246135363d20222e3f}
		 $hex271= {246135373d20222e3f}
		 $hex272= {246135383d20222e3f}
		 $hex273= {246135393d20222e3f}
		 $hex274= {2461353d20223a243a}
		 $hex275= {246136303d20222e3f}
		 $hex276= {246136313d20222e3f}
		 $hex277= {246136323d20222e3f}
		 $hex278= {246136333d20222e3f}
		 $hex279= {246136343d20222e3f}
		 $hex280= {246136353d20222e3f}
		 $hex281= {246136363d20222e3f}
		 $hex282= {246136373d20222e3f}
		 $hex283= {246136383d20222e3f}
		 $hex284= {246136393d20222e3f}
		 $hex285= {2461363d20223b243b}
		 $hex286= {246137303d20222e3f}
		 $hex287= {246137313d20222e3f}
		 $hex288= {246137323d20222e3f}
		 $hex289= {246137333d20222e3f}
		 $hex290= {246137343d20222e3f}
		 $hex291= {246137353d20222e3f}
		 $hex292= {246137363d20222e3f}
		 $hex293= {246137373d20222e3f}
		 $hex294= {246137383d20222e3f}
		 $hex295= {246137393d20222e3f}
		 $hex296= {2461373d2022302330}
		 $hex297= {246138303d20222e3f}
		 $hex298= {246138313d20222e3f}
		 $hex299= {246138323d20222e3f}
		 $hex300= {246138333d20222e3f}
		 $hex301= {246138343d20222e3f}
		 $hex302= {246138353d20222e3f}
		 $hex303= {246138363d20222e3f}
		 $hex304= {246138373d20222e3f}
		 $hex305= {246138383d20222e3f}
		 $hex306= {246138393d20222e3f}
		 $hex307= {2461383d2022303132}
		 $hex308= {246139303d20222e3f}
		 $hex309= {246139313d20222e3f}
		 $hex310= {246139323d20222e3f}
		 $hex311= {246139333d20222e3f}
		 $hex312= {246139343d20222e3f}
		 $hex313= {246139353d20222e3f}
		 $hex314= {246139363d20222e3f}
		 $hex315= {246139373d20222e3f}
		 $hex316= {246139383d20222e3f}
		 $hex317= {246139393d20222e3f}
		 $hex318= {2461393d2022303132}
		 $hex319= {24733130303d202263}
		 $hex320= {24733130313d202263}
		 $hex321= {24733130323d202263}
		 $hex322= {24733130333d202263}
		 $hex323= {24733130343d202263}
		 $hex324= {24733130353d202263}
		 $hex325= {24733130363d202263}
		 $hex326= {24733130373d202263}
		 $hex327= {24733130383d202263}
		 $hex328= {24733130393d202263}
		 $hex329= {247331303d20225f5f}
		 $hex330= {24733131303d20225f}
		 $hex331= {24733131313d202263}
		 $hex332= {24733131323d202263}
		 $hex333= {24733131333d202263}
		 $hex334= {24733131343d20225f}
		 $hex335= {24733131353d202263}
		 $hex336= {24733131363d202263}
		 $hex337= {24733131373d202243}
		 $hex338= {24733131383d202243}
		 $hex339= {24733131393d202243}
		 $hex340= {247331313d20225f5f}
		 $hex341= {24733132303d202243}
		 $hex342= {24733132313d202243}
		 $hex343= {24733132323d202243}
		 $hex344= {24733132333d202243}
		 $hex345= {24733132343d202243}
		 $hex346= {24733132353d202243}
		 $hex347= {24733132363d202243}
		 $hex348= {24733132373d202243}
		 $hex349= {24733132383d202243}
		 $hex350= {24733132393d202243}
		 $hex351= {247331323d20225f5f}
		 $hex352= {24733133303d202243}
		 $hex353= {24733133313d202243}
		 $hex354= {24733133323d202243}
		 $hex355= {24733133333d202243}
		 $hex356= {24733133343d202243}
		 $hex357= {24733133353d202243}
		 $hex358= {24733133363d202243}
		 $hex359= {24733133373d202243}
		 $hex360= {24733133383d202243}
		 $hex361= {24733133393d202243}
		 $hex362= {247331333d20225f5f}
		 $hex363= {24733134303d202243}
		 $hex364= {24733134313d202243}
		 $hex365= {24733134323d202227}
		 $hex366= {24733134333d202243}
		 $hex367= {24733134343d202263}
		 $hex368= {24733134353d20225f}
		 $hex369= {24733134363d20225f}
		 $hex370= {24733134373d20225f}
		 $hex371= {24733134383d202229}
		 $hex372= {24733134393d202263}
		 $hex373= {247331343d20225f5f}
		 $hex374= {24733135303d20225f}
		 $hex375= {24733135313d20225f}
		 $hex376= {24733135323d20225f}
		 $hex377= {24733135333d20225f}
		 $hex378= {24733135343d202263}
		 $hex379= {24733135353d202264}
		 $hex380= {24733135363d202244}
		 $hex381= {24733135373d202264}
		 $hex382= {24733135383d202264}
		 $hex383= {24733135393d202264}
		 $hex384= {247331353d20225f5f}
		 $hex385= {24733136303d202264}
		 $hex386= {24733136313d202244}
		 $hex387= {24733136323d202264}
		 $hex388= {24733136333d202264}
		 $hex389= {24733136343d202228}
		 $hex390= {24733136353d202264}
		 $hex391= {24733136363d202244}
		 $hex392= {24733136373d202228}
		 $hex393= {24733136383d202265}
		 $hex394= {24733136393d202265}
		 $hex395= {247331363d20225f5f}
		 $hex396= {24733137303d202265}
		 $hex397= {24733137313d202265}
		 $hex398= {24733137323d202265}
		 $hex399= {24733137333d202265}
		 $hex400= {24733137343d202265}
		 $hex401= {24733137353d202265}
		 $hex402= {24733137363d202265}
		 $hex403= {24733137373d202245}
		 $hex404= {24733137383d202265}
		 $hex405= {24733137393d202265}
		 $hex406= {247331373d20225f5f}
		 $hex407= {24733138303d202265}
		 $hex408= {24733138313d202265}
		 $hex409= {24733138323d202266}
		 $hex410= {24733138333d202266}
		 $hex411= {24733138343d202266}
		 $hex412= {24733138353d202266}
		 $hex413= {24733138363d202266}
		 $hex414= {24733138373d202266}
		 $hex415= {24733138383d202246}
		 $hex416= {24733138393d202266}
		 $hex417= {247331383d20225f5f}
		 $hex418= {24733139303d202266}
		 $hex419= {24733139313d202266}
		 $hex420= {24733139323d202246}
		 $hex421= {24733139333d20225f}
		 $hex422= {24733139343d20225f}
		 $hex423= {24733139353d202266}
		 $hex424= {24733139363d202266}
		 $hex425= {24733139373d202266}
		 $hex426= {24733139383d20225f}
		 $hex427= {24733139393d202266}
		 $hex428= {247331393d20225f5f}
		 $hex429= {2473313d2022212429}
		 $hex430= {24733230303d202266}
		 $hex431= {24733230313d202267}
		 $hex432= {24733230323d202267}
		 $hex433= {24733230333d202267}
		 $hex434= {24733230343d20223d}
		 $hex435= {24733230353d20225f}
		 $hex436= {24733230363d20225f}
		 $hex437= {24733230373d20225f}
		 $hex438= {24733230383d20225f}
		 $hex439= {24733230393d20225f}
		 $hex440= {247332303d20225f5f}
		 $hex441= {24733231303d202247}
		 $hex442= {24733231313d20225f}
		 $hex443= {24733231323d20225f}
		 $hex444= {24733231333d20225f}
		 $hex445= {24733231343d202268}
		 $hex446= {24733231353d202268}
		 $hex447= {24733231363d202268}
		 $hex448= {24733231373d202268}
		 $hex449= {24733231383d202268}
		 $hex450= {24733231393d202268}
		 $hex451= {247332313d20225f5f}
		 $hex452= {24733232303d202268}
		 $hex453= {24733232313d202228}
		 $hex454= {24733232323d202249}
		 $hex455= {24733232333d202249}
		 $hex456= {24733232343d202249}
		 $hex457= {24733232353d202249}
		 $hex458= {24733232363d202249}
		 $hex459= {24733232373d202249}
		 $hex460= {24733232383d202269}
		 $hex461= {24733232393d202269}
		 $hex462= {247332323d20225f5f}
		 $hex463= {24733233303d202269}
		 $hex464= {24733233313d202269}
		 $hex465= {24733233323d20225f}
		 $hex466= {24733233333d202269}
		 $hex467= {24733233343d202269}
		 $hex468= {24733233353d202269}
		 $hex469= {24733233363d202249}
		 $hex470= {24733233373d20225f}
		 $hex471= {24733233383d20225f}
		 $hex472= {24733233393d20223a}
		 $hex473= {247332333d20226169}
		 $hex474= {24733234303d20224a}
		 $hex475= {24733234313d20224a}
		 $hex476= {24733234323d20224a}
		 $hex477= {24733234333d20224b}
		 $hex478= {24733234343d20224c}
		 $hex479= {24733234353d20224c}
		 $hex480= {24733234363d20224c}
		 $hex481= {24733234373d20226c}
		 $hex482= {24733234383d20225f}
		 $hex483= {24733234393d20226c}
		 $hex484= {247332343d2022616d}
		 $hex485= {24733235303d20226c}
		 $hex486= {24733235313d20226c}
		 $hex487= {24733235323d20225f}
		 $hex488= {24733235333d20226c}
		 $hex489= {24733235343d20226d}
		 $hex490= {24733235353d20225f}
		 $hex491= {24733235363d20225f}
		 $hex492= {24733235373d20226d}
		 $hex493= {24733235383d20226d}
		 $hex494= {24733235393d20224d}
		 $hex495= {247332353d2022616d}
		 $hex496= {24733236303d20226d}
		 $hex497= {24733236313d20226d}
		 $hex498= {24733236323d20226d}
		 $hex499= {24733236333d20226d}
		 $hex500= {24733236343d20226d}
		 $hex501= {24733236353d20226d}
		 $hex502= {24733236363d20226d}
		 $hex503= {24733236373d20226d}
		 $hex504= {24733236383d20226d}
		 $hex505= {24733236393d20226d}
		 $hex506= {247332363d20226170}
		 $hex507= {24733237303d20226d}
		 $hex508= {24733237313d20226d}
		 $hex509= {24733237323d20226d}
		 $hex510= {24733237333d20226d}
		 $hex511= {24733237343d20226d}
		 $hex512= {24733237353d20226d}
		 $hex513= {24733237363d20226d}
		 $hex514= {24733237373d20226d}
		 $hex515= {24733237383d20226d}
		 $hex516= {24733237393d20226d}
		 $hex517= {247332373d20226170}
		 $hex518= {24733238303d20226d}
		 $hex519= {24733238313d20226d}
		 $hex520= {24733238323d20226d}
		 $hex521= {24733238333d20226d}
		 $hex522= {24733238343d20226d}
		 $hex523= {24733238353d20226d}
		 $hex524= {24733238363d20226d}
		 $hex525= {24733238373d20226d}
		 $hex526= {24733238383d20226d}
		 $hex527= {24733238393d20226d}
		 $hex528= {247332383d20226170}
		 $hex529= {24733239303d20226d}
		 $hex530= {24733239313d20226d}
		 $hex531= {24733239323d20226d}
		 $hex532= {24733239333d20226d}
		 $hex533= {24733239343d20226d}
		 $hex534= {24733239353d20226d}
		 $hex535= {24733239363d20226d}
		 $hex536= {24733239373d20226d}
		 $hex537= {24733239383d20226d}
		 $hex538= {24733239393d20226d}
		 $hex539= {247332393d20226170}
		 $hex540= {2473323d2022292920}
		 $hex541= {24733330303d20226d}
		 $hex542= {24733330313d20226d}
		 $hex543= {24733330323d20226d}
		 $hex544= {24733330333d20226d}
		 $hex545= {24733330343d20226d}
		 $hex546= {24733330353d20226d}
		 $hex547= {24733330363d20226d}
		 $hex548= {24733330373d20226d}
		 $hex549= {24733330383d20226d}
		 $hex550= {24733330393d20226d}
		 $hex551= {247333303d20226170}
		 $hex552= {24733331303d20226d}
		 $hex553= {24733331313d20226d}
		 $hex554= {24733331323d20226d}
		 $hex555= {24733331333d20226d}
		 $hex556= {24733331343d20226d}
		 $hex557= {24733331353d20226d}
		 $hex558= {24733331363d20226d}
		 $hex559= {24733331373d20226d}
		 $hex560= {24733331383d20226d}
		 $hex561= {24733331393d20226d}
		 $hex562= {247333313d20226170}
		 $hex563= {24733332303d20226d}
		 $hex564= {24733332313d20226d}
		 $hex565= {24733332323d20226d}
		 $hex566= {24733332333d20226d}
		 $hex567= {24733332343d20226d}
		 $hex568= {24733332353d20226d}
		 $hex569= {24733332363d20226d}
		 $hex570= {24733332373d20226d}
		 $hex571= {24733332383d20226d}
		 $hex572= {24733332393d20226d}
		 $hex573= {247333323d20226170}
		 $hex574= {24733333303d20226d}
		 $hex575= {24733333313d20226d}
		 $hex576= {24733333323d20226d}
		 $hex577= {24733333333d20226d}
		 $hex578= {24733333343d20226d}
		 $hex579= {24733333353d20226d}
		 $hex580= {24733333363d20226d}
		 $hex581= {24733333373d20226d}
		 $hex582= {24733333383d20226d}
		 $hex583= {24733333393d20226d}
		 $hex584= {247333333d20226170}
		 $hex585= {24733334303d20226d}
		 $hex586= {24733334313d20226d}
		 $hex587= {24733334323d20226d}
		 $hex588= {24733334333d20226d}
		 $hex589= {24733334343d20226d}
		 $hex590= {24733334353d20226d}
		 $hex591= {24733334363d20226d}
		 $hex592= {24733334373d20226d}
		 $hex593= {24733334383d20226d}
		 $hex594= {24733334393d20226d}
		 $hex595= {247333343d20226170}
		 $hex596= {24733335303d20226d}
		 $hex597= {24733335313d20226d}
		 $hex598= {24733335323d20226d}
		 $hex599= {24733335333d20226d}
		 $hex600= {24733335343d20226d}
		 $hex601= {24733335353d20226d}
		 $hex602= {24733335363d20226d}
		 $hex603= {24733335373d20225f}
		 $hex604= {24733335383d20226e}
		 $hex605= {24733335393d20226e}
		 $hex606= {247333353d20226170}
		 $hex607= {24733336303d20226e}
		 $hex608= {24733336313d20226e}
		 $hex609= {24733336323d20226e}
		 $hex610= {24733336333d20226e}
		 $hex611= {24733336343d20224f}
		 $hex612= {24733336353d20223a}
		 $hex613= {24733336363d20226f}
		 $hex614= {24733336373d202228}
		 $hex615= {24733336383d20226f}
		 $hex616= {24733336393d20224f}
		 $hex617= {247333363d20226170}
		 $hex618= {24733337303d20226f}
		 $hex619= {24733337313d202228}
		 $hex620= {24733337323d20225f}
		 $hex621= {24733337333d20226f}
		 $hex622= {24733337343d20226f}
		 $hex623= {24733337353d20226f}
		 $hex624= {24733337363d202270}
		 $hex625= {24733337373d202270}
		 $hex626= {24733337383d202270}
		 $hex627= {24733337393d202250}
		 $hex628= {247333373d20226170}
		 $hex629= {24733338303d202270}
		 $hex630= {24733338313d202270}
		 $hex631= {24733338323d202270}
		 $hex632= {24733338333d202270}
		 $hex633= {24733338343d202270}
		 $hex634= {24733338353d202270}
		 $hex635= {24733338363d202270}
		 $hex636= {24733338373d202228}
		 $hex637= {24733338383d202270}
		 $hex638= {24733338393d202270}
		 $hex639= {247333383d20226170}
		 $hex640= {24733339303d202228}
		 $hex641= {24733339313d202228}
		 $hex642= {24733339323d202270}
		 $hex643= {24733339333d202250}
		 $hex644= {24733339343d202250}
		 $hex645= {24733339353d202270}
		 $hex646= {24733339363d202270}
		 $hex647= {24733339373d202228}
		 $hex648= {24733339383d202228}
		 $hex649= {24733339393d202270}
		 $hex650= {247333393d20226170}
		 $hex651= {2473333d2022292920}
		 $hex652= {24733430303d202270}
		 $hex653= {24733430313d202270}
		 $hex654= {24733430323d202228}
		 $hex655= {24733430333d202272}
		 $hex656= {24733430343d202272}
		 $hex657= {24733430353d202272}
		 $hex658= {24733430363d202272}
		 $hex659= {24733430373d202228}
		 $hex660= {24733430383d202272}
		 $hex661= {24733430393d202272}
		 $hex662= {247334303d20226172}
		 $hex663= {24733431303d202272}
		 $hex664= {24733431313d202252}
		 $hex665= {24733431323d202252}
		 $hex666= {24733431333d202273}
		 $hex667= {24733431343d202273}
		 $hex668= {24733431353d202253}
		 $hex669= {24733431363d202253}
		 $hex670= {24733431373d20225f}
		 $hex671= {24733431383d202273}
		 $hex672= {24733431393d202273}
		 $hex673= {247334313d20226172}
		 $hex674= {24733432303d20223d}
		 $hex675= {24733432313d202273}
		 $hex676= {24733432323d202226}
		 $hex677= {24733432333d202273}
		 $hex678= {24733432343d202273}
		 $hex679= {24733432353d202273}
		 $hex680= {24733432363d202273}
		 $hex681= {24733432373d202253}
		 $hex682= {24733432383d202253}
		 $hex683= {24733432393d202228}
		 $hex684= {247334323d20226172}
		 $hex685= {24733433303d202273}
		 $hex686= {24733433313d202273}
		 $hex687= {24733433323d202273}
		 $hex688= {24733433333d202273}
		 $hex689= {24733433343d202273}
		 $hex690= {24733433353d202273}
		 $hex691= {24733433363d202273}
		 $hex692= {24733433373d202273}
		 $hex693= {24733433383d202273}
		 $hex694= {24733433393d202273}
		 $hex695= {247334333d20226172}
		 $hex696= {24733434303d202273}
		 $hex697= {24733434313d202273}
		 $hex698= {24733434323d202273}
		 $hex699= {24733434333d202273}
		 $hex700= {24733434343d202273}
		 $hex701= {24733434353d202273}
		 $hex702= {24733434363d202273}
		 $hex703= {24733434373d202273}
		 $hex704= {24733434383d202273}
		 $hex705= {24733434393d202273}
		 $hex706= {247334343d20226172}
		 $hex707= {24733435303d202273}
		 $hex708= {24733435313d202273}
		 $hex709= {24733435323d202253}
		 $hex710= {24733435333d20225f}
		 $hex711= {24733435343d202273}
		 $hex712= {24733435353d202273}
		 $hex713= {24733435363d202273}
		 $hex714= {24733435373d202273}
		 $hex715= {24733435383d202273}
		 $hex716= {24733435393d202273}
		 $hex717= {247334353d20226172}
		 $hex718= {24733436303d202273}
		 $hex719= {24733436313d202273}
		 $hex720= {24733436323d202228}
		 $hex721= {24733436333d202273}
		 $hex722= {24733436343d202273}
		 $hex723= {24733436353d20225f}
		 $hex724= {24733436363d20225f}
		 $hex725= {24733436373d20225f}
		 $hex726= {24733436383d202253}
		 $hex727= {24733436393d202273}
		 $hex728= {247334363d20226172}
		 $hex729= {24733437303d202273}
		 $hex730= {24733437313d202273}
		 $hex731= {24733437323d202273}
		 $hex732= {24733437333d202273}
		 $hex733= {24733437343d202273}
		 $hex734= {24733437353d202273}
		 $hex735= {24733437363d202273}
		 $hex736= {24733437373d202273}
		 $hex737= {24733437383d202273}
		 $hex738= {24733437393d202273}
		 $hex739= {247334373d20226172}
		 $hex740= {24733438303d202253}
		 $hex741= {24733438313d20223a}
		 $hex742= {24733438323d202273}
		 $hex743= {24733438333d202274}
		 $hex744= {24733438343d202274}
		 $hex745= {24733438353d202254}
		 $hex746= {24733438363d202274}
		 $hex747= {24733438373d202274}
		 $hex748= {24733438383d202274}
		 $hex749= {24733438393d202274}
		 $hex750= {247334383d20226172}
		 $hex751= {24733439303d202274}
		 $hex752= {24733439313d202274}
		 $hex753= {24733439323d202274}
		 $hex754= {24733439333d202274}
		 $hex755= {24733439343d202274}
		 $hex756= {24733439353d202274}
		 $hex757= {24733439363d202274}
		 $hex758= {24733439373d202274}
		 $hex759= {24733439383d202274}
		 $hex760= {24733439393d202274}
		 $hex761= {247334393d20224173}
		 $hex762= {2473343d2022292920}
		 $hex763= {24733530303d202274}
		 $hex764= {24733530313d202274}
		 $hex765= {24733530323d202274}
		 $hex766= {24733530333d202274}
		 $hex767= {24733530343d202274}
		 $hex768= {24733530353d202274}
		 $hex769= {24733530363d202274}
		 $hex770= {24733530373d202274}
		 $hex771= {24733530383d202274}
		 $hex772= {24733530393d202274}
		 $hex773= {247335303d20224173}
		 $hex774= {24733531303d202274}
		 $hex775= {24733531313d202274}
		 $hex776= {24733531323d202274}
		 $hex777= {24733531333d202274}
		 $hex778= {24733531343d202274}
		 $hex779= {24733531353d202274}
		 $hex780= {24733531363d202274}
		 $hex781= {24733531373d202274}
		 $hex782= {24733531383d202274}
		 $hex783= {24733531393d202274}
		 $hex784= {247335313d20224173}
		 $hex785= {24733532303d202274}
		 $hex786= {24733532313d202274}
		 $hex787= {24733532323d202274}
		 $hex788= {24733532333d202274}
		 $hex789= {24733532343d202274}
		 $hex790= {24733532353d202274}
		 $hex791= {24733532363d202274}
		 $hex792= {24733532373d202274}
		 $hex793= {24733532383d202274}
		 $hex794= {24733532393d202274}
		 $hex795= {247335323d20224173}
		 $hex796= {24733533303d202274}
		 $hex797= {24733533313d202274}
		 $hex798= {24733533323d202274}
		 $hex799= {24733533333d202255}
		 $hex800= {24733533343d202228}
		 $hex801= {24733533353d202228}
		 $hex802= {24733533363d202255}
		 $hex803= {24733533373d20223e}
		 $hex804= {24733533383d20225f}
		 $hex805= {24733533393d20225f}
		 $hex806= {247335333d20224261}
		 $hex807= {24733534303d202276}
		 $hex808= {24733534313d202276}
		 $hex809= {24733534323d202276}
		 $hex810= {24733534333d202276}
		 $hex811= {24733534343d202256}
		 $hex812= {24733534353d202277}
		 $hex813= {24733534363d202277}
		 $hex814= {24733534373d202277}
		 $hex815= {24733534383d202277}
		 $hex816= {24733534393d202277}
		 $hex817= {247335343d20226261}
		 $hex818= {24733535303d202277}
		 $hex819= {24733535313d202277}
		 $hex820= {24733535323d202277}
		 $hex821= {24733535333d202277}
		 $hex822= {24733535343d202277}
		 $hex823= {24733535353d202277}
		 $hex824= {24733535363d202277}
		 $hex825= {24733535373d202277}
		 $hex826= {24733535383d202277}
		 $hex827= {24733535393d202277}
		 $hex828= {247335353d20226269}
		 $hex829= {24733536303d202277}
		 $hex830= {24733536313d202277}
		 $hex831= {24733536323d202277}
		 $hex832= {24733536333d202277}
		 $hex833= {24733536343d202277}
		 $hex834= {24733536353d202277}
		 $hex835= {24733536363d202277}
		 $hex836= {24733536373d202277}
		 $hex837= {24733536383d202277}
		 $hex838= {24733536393d202277}
		 $hex839= {247335363d2022626c}
		 $hex840= {24733537303d202277}
		 $hex841= {24733537313d202277}
		 $hex842= {24733537323d202277}
		 $hex843= {24733537333d202277}
		 $hex844= {24733537343d202277}
		 $hex845= {24733537353d20225f}
		 $hex846= {24733537363d20225f}
		 $hex847= {24733537373d20225f}
		 $hex848= {24733537383d202277}
		 $hex849= {24733537393d202277}
		 $hex850= {247335373d20226275}
		 $hex851= {24733538303d202277}
		 $hex852= {24733538313d202277}
		 $hex853= {24733538323d20225f}
		 $hex854= {24733538333d20225f}
		 $hex855= {24733538343d20225f}
		 $hex856= {24733538353d202277}
		 $hex857= {24733538363d202258}
		 $hex858= {247335383d20226275}
		 $hex859= {247335393d20224275}
		 $hex860= {2473353d2022292920}
		 $hex861= {247336303d20226275}
		 $hex862= {247336313d20226275}
		 $hex863= {247336323d20222862}
		 $hex864= {247336333d20226275}
		 $hex865= {247336343d20226275}
		 $hex866= {247336353d20226320}
		 $hex867= {247336363d20226361}
		 $hex868= {247336373d20226361}
		 $hex869= {247336383d20226361}
		 $hex870= {247336393d20226361}
		 $hex871= {2473363d2022332f33}
		 $hex872= {247337303d20226361}
		 $hex873= {247337313d20226361}
		 $hex874= {247337323d20226363}
		 $hex875= {247337333d20226368}
		 $hex876= {247337343d20226368}
		 $hex877= {247337353d20226368}
		 $hex878= {247337363d20226368}
		 $hex879= {247337373d20226368}
		 $hex880= {247337383d20226368}
		 $hex881= {247337393d20226368}
		 $hex882= {2473373d202261626f}
		 $hex883= {247338303d20226368}
		 $hex884= {247338313d20226368}
		 $hex885= {247338323d20226368}
		 $hex886= {247338333d20226368}
		 $hex887= {247338343d20226368}
		 $hex888= {247338353d20226368}
		 $hex889= {247338363d2022636c}
		 $hex890= {247338373d2022636f}
		 $hex891= {247338383d2022636f}
		 $hex892= {247338393d2022636f}
		 $hex893= {2473383d2022286163}
		 $hex894= {247339303d2022636f}
		 $hex895= {247339313d2022636f}
		 $hex896= {247339323d2022636f}
		 $hex897= {247339333d2022636f}
		 $hex898= {247339343d2022636f}
		 $hex899= {247339353d2022636f}
		 $hex900= {247339363d2022636f}
		 $hex901= {247339373d2022636f}
		 $hex902= {247339383d2022636f}
		 $hex903= {247339393d2022636f}
		 $hex904= {2473393d20225f5f61}

	condition:
		113 of them
}
